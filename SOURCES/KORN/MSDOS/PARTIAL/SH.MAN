




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



     NNNNAAAAMMMMEEEE
          sh, rsh - shell, the standard/restricted command programming
          language

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          sssshhhh [ ----aaaacccceeeeffffhhhhiiiikkkknnnnmmmmrrrrssssttttuuuuvvvvxxxx0000RRRR ] [ args ]
          rrrrsssshhhh [ ----aaaacccceeeeffffhhhhiiiikkkknnnnmmmmrrrrssssttttuuuuvvvvxxxx0000RRRR ] [ args ]

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          _s_h is a command programming language that executes  commands
          read from a terminal or a file.  _R_s_h is a restricted version
          of the standard command interpreter _s_h; it is used to set up
          login  names  and  execution environments whose capabilities
          are more controlled than those of the standard  shell.   See
          _I_n_v_o_c_a_t_i_o_n below for the meaning of arguments to the shell.

        DDDDeeeeffffiiiinnnniiiittttiiiioooonnnnssss
          A _b_l_a_n_k is a tab or a  space.   A  _n_a_m_e  is  a  sequence  of
          letters,  digits,  or underscores beginning with a letter or
          underscore.  A _p_a_r_a_m_e_t_e_r is a name, a digit, or any  of  the
          characters ****, @@@@, ####, ????, ----, $$$$, and !!!!.

        CCCCoooommmmmmmmaaaannnnddddssss
          A _s_i_m_p_l_e-_c_o_m_m_a_n_d is a sequence of non-blank _w_o_r_d_s  separated
          by _b_l_a_n_k_s.  The first word specifies the name of the command
          to be executed.  Except as specified  below,  the  remaining
          words  are  passed as arguments to the invoked command.  The
          command name is passed as argument  0  (see  _e_x_e_c(2)).   The
          _v_a_l_u_e   of  a  simple-command  is  its  exit  status  if  it
          terminates normally, or (octal) 200+_s_t_a_t_u_s if it  terminates
          abnormally (see _s_i_g_n_a_l(2) for a list of status values).

          A _p_i_p_e_l_i_n_e is a sequence of one or more  _c_o_m_m_a_n_d_s  separated
          by |||| (or, for historical compatibility, by ^^^^).  The standard
          output of each command  but  the  last  is  connected  by  a
          _p_i_p_e(2)  to  the  standard  input of the next command.  Each
          command is run as a separate process; the  shell  waits  for
          the  last  command  to  terminate.   The  exit  status  of a
          pipeline is the exit status of the last command.

          A _l_i_s_t is a sequence of one or more pipelines  separated  by
          ;;;;,  &&&& (OOOOSSSS////2222 only), &&&&&&&&, or ||||||||, and optionally terminated by ;;;;
          or &&&& (OOOOSSSS////2222 only).  Of these four symbols, ;;;; and &&&& have equal
          precedence,  which  is  lower precedence than that of &&&&&&&& and
          ||||||||.  The symbols &&&&&&&& and |||||||| also have  equal  precedence.   A
          semicolon  (;;;;)  causes sequential execution of the preceding
          pipeline; an ampersand (&&&&) causes asynchronous execution  of
          the  preceding  pipeline  (i.e., the shell does not wait for
          that command to finish.  This option is only available under
          OOOOSSSS////2222  and is restricted to single commands and not pipelines
          because of the differences in  the  UUUUNNNNIIIIXXXX  and  OOOOSSSS////2222  process
          models).  The symbol &&&&&&&& (||||||||) causes the _l_i_s_t following it to



     Page 1                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          be executed only if the preceding pipeline  returns  a  zero
          (non-zero)  exit  status.   An arbitrary number of new-lines
          may appear in a _l_i_s_t,  instead  of  semicolons,  to  delimit
          commands.

          A  _c_o_m_m_a_n_d  is  either  a  simple-command  or  one  of   the
          following.  Unless otherwise stated, the value returned by a
          command is that of the last simple-command executed  in  the
          command.

          ffffoooorrrr _n_a_m_e [ iiiinnnn _w_o_r_d ... ] ddddoooo _l_i_s_t ddddoooonnnneeee
               Each time a ffffoooorrrr command is executed, _n_a_m_e is set to the
               next  _w_o_r_d taken from the iiiinnnn _w_o_r_d list.  If iiiinnnn _w_o_r_d ...
               is omitted, then the ffffoooorrrr command executes the  ddddoooo  _l_i_s_t
               once  for  each  positional  parameter that is set (see
               _P_a_r_a_m_e_t_e_r _S_u_b_s_t_i_t_u_t_i_o_n  below).   Execution  ends  when
               there are no more words in the list.

          sssseeeelllleeeecccctttt _n_a_m_e [ iiiinnnn _w_o_r_d ... ] ddddoooo _l_i_s_t ddddoooonnnneeee
               A  sssseeeelllleeeecccctttt  command  prints  on  standard  error   (file
               descriptor  2),  the  set  of _w_o_r_ds, each preceded by a
               number.  If iiiinnnn _w_o_r_d ... is omitted, then the positional
               parameters are used instead (see _P_a_r_a_m_e_t_e_r _S_u_b_s_t_i_t_u_t_i_o_n
               below).  The PPPPSSSS3333 prompt is printed and a line  is  read
               from  the standard input.  If this line consists of the
               number of one of the listed _w_o_r_ds, then  the  value  of
               the  parameter _n_a_m_e is set to the _w_o_r_d corresponding to
               this number.  If this line is empty the selection  list
               is printed again.  Otherwise the value of the parameter
               _n_a_m_e is set to null.  The contents  of  the  line  read
               from  standard  input  is saved in the parameter RRRREEEEPPPPLLLLYYYY.
               The list is executed for each selection until  a  break
               or end-of-file is encountered.

          ccccaaaasssseeee _w_o_r_d iiiinnnn [ _p_a_t_t_e_r_n [ | _p_a_t_t_e_r_n ] ... )))) _l_i_s_t ;;;;;;;; ] ... eeeessssaaaacccc
               A  ccccaaaasssseeee  command  executes the _l_i_s_t associated with the
               first _p_a_t_t_e_r_n that  matches  _w_o_r_d.   The  form  of  the
               patterns  is  the  same  as  that  used  for  file-name
               generation (see _F_i_l_e _N_a_m_e  _G_e_n_e_r_a_t_i_o_n)  except  that  a
               slash,  a leading dot, or a dot immediately following a
               slash need not be matched explicitly, and the match  is
               case sensitive.

          iiiiffff _l_i_s_t tttthhhheeeennnn _l_i_s_t [ eeeelllliiiiffff _l_i_s_t tttthhhheeeennnn _l_i_s_t ] ... [ eeeellllsssseeee _l_i_s_t ] ffffiiii
               The  _l_i_s_t following iiiiffff is executed and, if it returns a
               zero exit status, the _l_i_s_t following the first tttthhhheeeennnn  is
               executed.    Otherwise,  the  _l_i_s_t  following  eeeelllliiiiffff  is
               executed and, if its value is zero, the _l_i_s_t  following
               the next tttthhhheeeennnn is executed.  Failing that, the eeeellllsssseeee _l_i_s_t
               is executed.  If no eeeellllsssseeee _l_i_s_t or tttthhhheeeennnn _l_i_s_t is executed,
               then the iiiiffff command returns a zero exit status.




     Page 2                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          wwwwhhhhiiiilllleeee _l_i_s_t ddddoooo _l_i_s_t ddddoooonnnneeee
               A wwwwhhhhiiiilllleeee command repeatedly executes the wwwwhhhhiiiilllleeee _l_i_s_t and,
               if  the  exit status of the last command in the list is
               zero,  executes  the  ddddoooo  _l_i_s_t;  otherwise   the   loop
               terminates.    If  no  commands  in  the  ddddoooo  _l_i_s_t  are
               executed, then the wwwwhhhhiiiilllleeee command returns  a  zero  exit
               status;  uuuunnnnttttiiiillll  may be used in place of wwwwhhhhiiiilllleeee to negate
               the loop termination test.

          ((((_l_i_s_t))))
               Execute _l_i_s_t in a sub-shell.  The shell creates  a  new
               environment  in which to execute the _l_i_s_t, but does not
               fork a sub-shell as a Unix system would.  The  original
               environment is restored on completion.

          {{{{ _l_i_s_t;;;; }}}}
               _l_i_s_t is simply executed.

          [[[[[[[[ _e_x_p_r_e_s_s_i_o_n ]]]]]]]]
               Evaluates expression and returns  a  zero  exit  status
               when  expression  is true.  See CCCCoooonnnnddddiiiittttiiiioooonnnnaaaallll EEEExxxxpppprrrreeeessssssssiiiioooonnnnssss
               below, for a description of expression.  Note  that  [[[[[[[[
               and ]]]]]]]] are keywords and require blanks between them and
               expression.

          ffffuuuunnnnccccttttiiiioooonnnn _n_a_m_e  {{{{ _l_i_s_t;;;; }}}}

          _n_a_m_e (((()))) {{{{ _l_i_s_t;;;; }}}}
               Define a function which is  referenced  by  _n_a_m_e.   The
               body  of the function is the _l_i_s_t of commands between {{{{
               and }}}}.  Execution of functions is described below  (see
               _E_x_e_c_u_t_i_o_n).

          The following words are only recognised as the first word of
          a command and when not quoted:

          iiiiffff tttthhhheeeennnn eeeellllsssseeee eeeelllliiiiffff ffffiiii ccccaaaasssseeee eeeessssaaaacccc ffffoooorrrr wwwwhhhhiiiilllleeee uuuunnnnttttiiiillll ddddoooo ddddoooonnnneeee  {{{{  }}}}
          [[[[[[[[ ]]]]]]]]

        CCCCoooommmmmmmmeeeennnnttttssss
          A word beginning  with  ####  causes  that  word  and  all  the
          following characters up to a new-line to be ignored.

        AAAAlllliiiiaaaassssiiiinnnngggg
          The first word of each command is replaced by the text of an
          alias if an alias for this word has been defined.  The alias
          name must a valid identifier.  The  replacement  string  can
          contain any valid Shell script including the meta-characters
          listed above.   The  first  word  of  each  command  of  the
          replaced text will not be tested for additional aliases.  If
          the last character of the alias value is a  blank  then  the
          word  following  the  alias  will  also be checked for alias



     Page 3                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          substitution.  Aliases  can  be  used  to  redefine  special
          built-in  commands  but  cannot  be  used  to  redefine  the
          keywords listed above.  Aliases can be  created  and  listed
          with  the  aaaalllliiiiaaaassss command and can be removed with the uuuunnnnaaaalllliiiiaaaassss
          command.

          Aliasing is performed when scripts are read, not while  they
          are  executed.   Therefore,  for an alias to take effect the
          alias command has to be executed before  the  command  which
          references the alias is read.

          Aliases are frequently used as a short hand  for  full  path
          names.   An option to the aliasing facility allows the value
          of the alias to be automatically set to the full pathname of
          the corresponding command.  These aliases are called tracked
          aliases.  The value of a tracked alias is defined the  first
          time  the  corresponding  command  is  looked up and becomes
          undefined each time  the  PATH  variable  is  reset.   These
          aliases remain tracked so that the next subsequent reference
          will redefine the value.

        CCCCoooonnnnddddiiiittttiiiioooonnnnaaaallll EEEExxxxpppprrrreeeessssssssiiiioooonnnnssss
          A conditional  expression  is  used  with  the  [[[[[[[[  compound
          command  to test attributes of files and to compare strings.
          Word splitting and file name generation are not performed on
          the  words  between  [[[[[[[[  and  ]]]]]]]].   Each  expression  can be
          constructed from one or  more  of  the  following  unary  or
          binary expressions:

               ----aaaa _f_i_l_e     True if _f_i_l_e exists.

               ----bbbb _f_i_l_e     True if _f_i_l_e exists and is a block  special
                           file.

               ----cccc _f_i_l_e     True if _f_i_l_e  exists  and  is  a  character
                           special file.

               ----dddd _f_i_l_e     True if _f_i_l_e exists and is a directory.

               ----ffff _f_i_l_e     True if _f_i_l_e exists and is a regular file.

               ----gggg _f_i_l_e     True if _f_i_l_e exists and has its setgid  bit
                           set.

               ----hhhh _f_i_l_e     True if _f_i_l_e exists and is a symbolic link.

               ----kkkk _f_i_l_e     True if _f_i_l_e exists and has its sticky  bit
                           set.  Under MMMMSSSS----DDDDOOOOSSSS and OOOOSSSS////2222, the sticky bit
                           is equivalent to the ARCHIVED attribute.

               ----nnnn _s_t_r_i_n_g   True if the length of _s_t_r_i_n_g is non-zero.




     Page 4                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               ----oooo _o_p_t_i_o_n   True if the _o_p_t_i_o_n named is on.

               ----pppp _f_i_l_e     True if _f_i_l_e exists and is a  FIFO  special
                           file or a pipe.

               ----rrrr _f_i_l_e     True if _f_i_l_e exists and is readable.

               ----ssss _f_i_l_e     True if _f_i_l_e exists and has a size  greater
                           than zero.

               ----tttt [ _f_i_l_d_e_s ]
                           True if the open file whose file descriptor
                           number   is   _f_i_l_d_e_s   (1  by  default)  is
                           associated with a terminal device.

               ----uuuu _f_i_l_e     True if _f_i_l_e exists and has its setuid  bit
                           set.

               ----wwww _f_i_l_e     True if _f_i_l_e exists and is writable.

               ----xxxx _f_i_l_e     True if _f_i_l_e exists and is executable.   If
                           _f_i_l_e  exists  and  is a directory, then the
                           current process has permission to search in
                           the directory.

               ----zzzz _s_t_r_i_n_g   True if the length of _s_t_r_i_n_g is zero.

               ----LLLL _f_i_l_e     True if _f_i_l_e exists and is a symbolic link.

               ----OOOO _f_i_l_e     True if _f_i_l_e exists and  is  owned  by  the
                           effective  user  id of this process.  Under
                           MMMMSSSS----DDDDOOOOSSSS and OOOOSSSS////2222, the UID bit is  equivalent
                           to the HIDDEN attribute.

               ----GGGG _f_i_l_e     True if _f_i_l_e exists and  is  owned  by  the
                           effective   user  group  of  this  process.
                           Under MMMMSSSS----DDDDOOOOSSSS  and  OOOOSSSS////2222,  the  GID  bit  is
                           equivalent to the SYSTEM attribute.

               ----SSSS _f_i_l_e     True if _f_i_l_e exists and is a socket.

               _f_i_l_e_1 ----nnnntttt _f_i_l_e_2
                           True if file1 is newer than file2.  True if
                           _f_i_l_e_1 exists and is newer than _f_i_l_e_2.

               _f_i_l_e_1 ----ooootttt _f_i_l_e_2
                           True if _f_i_l_e_1  exists  and  is  older  than
                           _f_i_l_e_2.

               _f_i_l_e_1 ----eeeeffff _f_i_l_e_2
                           True if _f_i_l_e_1 and _f_i_l_e_2 and  refer  to  the
                           same  file.   Under  MMMMSSSS----DDDDOOOOSSSS and OOOOSSSS////2222, inode



     Page 5                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                           information is not available, and the shell
                           compares the absolute filenames.

               _s_1 ==== _s_2     True if strings _s_1 and _s_2 are identical.

               _s_1 !!!!==== _s_2    True  if  strings  _s_1  and   _s_2   are   _n_o_t
                           identical.

               _s_1 <<<< _s_2     True if string _s_1 comes before _s_2 are based
                           on the ASCII value of their characters.

               _s_1 >>>> _s_2     True if string _s_1 comes after _s_2 are  based
                           on the ASCII value of their characters.

               _n_1 ----eeeeqqqq _n_2   True if _n_1 is equal to _n_2.

               _n_1 ----nnnneeee _n_2   True if _n_1 is not equal to _n_2.

               _n_1 ----lllltttt _n_2   True if _n_1 is less than to _n_2.

               _n_1 ----ggggtttt _n_2   True if _n_1 is greater than to _n_2.

               _n_1 ----lllleeee _n_2   True if _n_1 is less than or equal to _n_2.

               _n_1 ----ggggeeee _n_2   True if _n_1 is greater than or equal to _n_2.

          Not all of the above have meaning under MMMMSSSS----DDDDOOOOSSSS or OOOOSSSS////2222.   In
          such  cases, the appropriate value is set (_f_a_l_s_e, except for
          ----OOOO and ----GGGG).

          A  compound  expression  can  be  constructed   from   these
          primitives   by  using  any  of  the  following,  listed  in
          decreasing order of precedence.

                      (((( _e_x_p_r ))))
                           True, if  _e_x_p_r  is  true.   Used  to  group
                           expressions.

                      !!!! _e_x_p_r
                           True, if _e_x_p_r is false.

                      _e_x_p_r_1 &&&&&&&& _e_x_p_r_2
                           True, if _e_x_p_r_1 and _e_x_p_r_2 are both true.

                      _e_x_p_r_1 |||||||| _e_x_p_r_2
                           True, if _e_x_p_r_1 or _e_x_p_r_2 is true.

        TTTTiiiillllddddeeee SSSSuuuubbbbssssttttiiiittttuuuuttttiiiioooonnnn
          Each word is checked to see if it begins with an unquoted ~~~~.
          If  it  is,  the  ~~~~  is  replaced  by  the value of the HHHHOOOOMMMMEEEE
          parameter. A ~~~~ followed by a ++++ or ---- is replaced by the value
          of the parameter PPPPWWWWDDDD and OOOOLLLLDDDDPPPPWWWWDDDD respectively.



     Page 6                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



        CCCCoooommmmmmmmaaaannnndddd SSSSuuuubbbbssssttttiiiittttuuuuttttiiiioooonnnn
          The standard output from a command enclosed  in  parenthesis
          preceded  by  a  dollar  sign  ($$$$(((())))),  or in a pair of grave
          accents (````````) may be used as part or all of a word;  trailing
          new-lines are removed.  The command substitution $$$$((((ccccaaaatttt _f_i_l_e))))
          can be replaced by the equivalent but faster $$$$((((<<<<_f_i_l_e)))).

        PPPPaaaarrrraaaammmmeeeetttteeeerrrr SSSSuuuubbbbssssttttiiiittttuuuuttttiiiioooonnnn
          The  character  $$$$  is  used   to   introduce   substitutable
          _p_a_r_a_m_e_t_e_r_s.   There  are two types of parameters, positional
          and keyword.  If _p_a_r_a_m_e_t_e_r is a digit, it  is  a  positional
          parameter.   Positional parameters may be assigned values by
          sssseeeetttt.  Keyword parameters (also known as  variables)  may  be
          assigned values by writing:

               _n_a_m_e = _v_a_l_u_e [ _n_a_m_e = _v_a_l_u_e ] ...

          Pattern-matching is not performed on _v_a_l_u_e.  There cannot be
          a function and a variable with the same _n_a_m_e.

          Alternatively, named parameters can be assigned  values  and
          attributes by using the typeset special command.

          $$$${{{{_p_a_r_a_m_e_t_e_r}}}}
               The value, if any, of  the  _p_a_r_a_m_e_t_e_r  is  substituted.
               The braces are required only when _p_a_r_a_m_e_t_e_r is followed
               by a letter, digit, or underscore that  is  not  to  be
               interpreted  as part of its name.  If _p_a_r_a_m_e_t_e_r is **** or
               @@@@, all the positional parameters, starting with $$$$1111, are
               substituted (separated by spaces).  Parameter $$$$0000 is set
               from argument zero when the shell is invoked.

          $$$${{{{####_p_a_r_a_m_e_t_e_r}}}}
               If _p_a_r_a_m_e_t_e_r is  ****  or  @@@@,  the  number  of  positional
               parameters  is  substituted.   Otherwise, the length of
               the value of the _p_a_r_a_m_e_t_e_r is substituted.

          $$$${{{{_p_a_r_a_m_e_t_e_r::::----_w_o_r_d}}}}
               If _p_a_r_a_m_e_t_e_r is set and  is  non-null,  substitute  its
               value; otherwise substitute _w_o_r_d.

          $$$${{{{_p_a_r_a_m_e_t_e_r::::====_w_o_r_d}}}}
               If _p_a_r_a_m_e_t_e_r is not set or is null set it to _w_o_r_d;  the
               value  of  the  parameter  is  substituted.  Positional
               parameters may not be assigned to in this way.

          $$$${{{{_p_a_r_a_m_e_t_e_r::::????_w_o_r_d}}}}
               If _p_a_r_a_m_e_t_e_r is set and  is  non-null,  substitute  its
               value;  otherwise,  print _w_o_r_d and exit from the shell.
               If _w_o_r_d is omitted, the message ``parameter null or not
               set'' is printed.




     Page 7                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          $$$${{{{_p_a_r_a_m_e_t_e_r::::++++_w_o_r_d}}}}
               If _p_a_r_a_m_e_t_e_r is set and is non-null,  substitute  _w_o_r_d;
               otherwise substitute nothing.

          $$$${{{{_p_a_r_a_m_e_t_e_r####_p_a_t_t_e_r_n}}}}
          $$$${{{{_p_a_r_a_m_e_t_e_r########_p_a_t_t_e_r_n}}}}
               If the Shell _p_a_t_t_e_r_n matches the beginning of the value
               of  _p_a_r_a_m_e_t_e_r,  then  the value of this substitution is
               the value of the _p_a_r_a_m_e_t_e_r  with  the  matched  portion
               deleted;  otherwise  the  value  of  this  _p_a_r_a_m_e_t_e_r is
               substituted.  In the first form the  smallest  matching
               _p_a_t_t_e_r_n  is  deleted and in the latter form the largest
               matching _p_a_t_t_e_r_n is deleted.

          $$$${{{{_p_a_r_a_m_e_t_e_r%%%%_p_a_t_t_e_r_n}}}}
          $$$${{{{_p_a_r_a_m_e_t_e_r%%%%%%%%_p_a_t_t_e_r_n}}}}
               If the Shell _p_a_t_t_e_r_n matches the end of  the  value  of
               _p_a_r_a_m_e_t_e_r,  then  the value of this substitution is the
               value  of  the  _p_a_r_a_m_e_t_e_r  with  the  matched   portion
               deleted;  otherwise  the  value  of  this  _p_a_r_a_m_e_t_e_r is
               substituted.  In the first form the  smallest  matching
               _p_a_t_t_e_r_n  is  deleted and in the latter form the largest
               matching _p_a_t_t_e_r_n is deleted.

          In the above, _w_o_r_d is not evaluated unless it is to be  used
          as  the  substituted  string,  so  that,  in  the  following
          example, ppppwwwwdddd is executed only if dddd is not set or is null:

               echo ${d:-`pwd`}

          If the colon (::::) is omitted from the above expressions,  the
          shell only checks whether _p_a_r_a_m_e_t_e_r is set or not (_I_t _i_s _n_o_t
          _c_l_e_a_r _w_h_a_t _t_h_i_s _m_e_a_n_s).

          The following parameters are automatically set by the shell:

               ####    The number of positional parameters in decimal.

               -    Flags supplied to the shell on  invocation  or  by
                    the sssseeeetttt command.

               ????    The   decimal   value   returned   by   the   last
                    synchronously executed command.

               $$$$    The process number of this shell.

               !!!!    The process number of the last background  command
                    invoked.

               ____    The last argument of the previous command.

               ~~~~    The shell reserves all variables beginning with  a



     Page 8                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    ~~~~  for  its  own  internal use and these variables
                    cannot be accessed by the user.

          The following parameters are used by the shell:

               CCCCDDDDPPPPAAAATTTTHHHH
                    The search path for the _c_d  command.   (Note  that
                    because  a  colon  is used by MMMMSSSS----DDDDOOOOSSSS to indicate a
                    drive, a semi-colon is used to separate  the  path
                    names  instead  of a colon - this implies that the
                    CDPATH variable must be set using single or double
                    quotes to surround the value).

               CCCCOOOOLLLLUUUUMMMMNNNNSSSS
                    This variable is contains the number of columns on
                    the screen.

               CCCCOOOOMMMMSSSSPPPPEEEECCCC
                    When the shell has to process an  MMMMSSSS----DDDDOOOOSSSS  ._b_a_t  or
                    OOOOSSSS////2222  ._c_m_d  file, it expects the file indicated by
                    the value of this environment variable  to  be  an
                    executable  program  capable of processing the MMMMSSSS----
                    DDDDOOOOSSSS ._b_a_t  or  OOOOSSSS////2222  ._c_m_d  file.   The  program  is
                    invoked  with the arguments ////cccc ffffiiiilllleeee____nnnnaaaammmmeeee.  CCCCOOOOMMMMSSSSPPPPEEEECCCC
                    is parsed  and  split  on  white  space  to  allow
                    addition   parameters  to  be  passed  to  command
                    processor.   Thus  the  default  environment  size
                    could  be  set  to  1000  by  setting  to  _c_o_m_m_a_n_d
                    /_e:_1_0_0_0.

               EEEEDDDDIIIITTTTOOOORRRR
                    If the value of this variable ends in emacs or vi,
                    and  the  VVVVIIIISSSSUUUUAAAALLLL  variable  is  not  set, then the
                    corresponding option is turned on.

               EEEENNNNVVVV  If  this  parameter   is   set,   then   parameter
                    substitution is performed on the value to generate
                    the pathname of the script that will  be  executed
                    when  the shell is invoked (See Invocation below).
                    This file is typically used for alias and function
                    definitions.

               EEEETTTTCCCCPPPPRRRROOOOFFFFIIIILLLLEEEE
                    If this parameter is set,  it  contains  the  full
                    pathname  of  the  ////eeeettttcccc////pppprrrrooooffffiiiilllleeee  script  which  is
                    executed at interactive startup when the -_0 option
                    is  given  to  the shell.  If the parameter is not
                    set, the file ////eeeettttcccc////pppprrrrooooffffiiiilllleeee on the _r_o_o_t drive  (see
                    _I_n_i_t_i_a_l_i_s_a_t_i_o_n _F_i_l_e is used.

               EEEEXXXXTTTTEEEENNNNDDDDEEEEDDDD____LLLLIIIINNNNEEEE
                    This parameter pointers to a file  which  contains



     Page 9                                          (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    information  for the shell about how command lines
                    are to be built for particular  external  programs
                    and  how to convert from the format entered to the
                    shell (see _C_o_m_m_a_n_d _L_i_n_e _B_u_i_l_d_i_n_g).

               FFFFCCCCEEEEDDDDIIIITTTT
                    The default editor name for the fc command.

               HHHHIIIISSSSTTTTFFFFIIIILLLLEEEE
                    The file where command  history  is  saved  across
                    login    sessions.     The    default   value   is
                    $$$$HHHHOOOOMMMMEEEE////hhhhiiiissssttttoooorrrryyyy....sssshhhh.

               HHHHIIIISSSSTTTTSSSSIIIIZZZZEEEE
                    The  number  of  commands  normally   stored   for
                    history, default 100.

               HHHHOOOOMMMMEEEE The default argument (home directory) for  the  _c_d
                    command.

               IIIIFFFFSSSS  Internal field separators,  normally  ssssppppaaaacccceeee,  ttttaaaabbbb,
                    and nnnneeeewwww----lllliiiinnnneeee.

               LLLLIIIINNNNEEEENNNNOOOO
                    This variable contains the current line number  in
                    the script being processed.

               LLLLIIIINNNNEEEESSSS
                    This variable contains the number of lines on  the
                    screen.

               MMMMAAAAIIIILLLL If this parameter is set to the  name  of  a  mail
                    file  _a_n_d  the  MMMMAAAAIIIILLLLPPPPAAAATTTTHHHH parameter is not set, the
                    shell informs the user of the arrival of  mail  in
                    the specified file.

               MMMMAAAAIIIILLLLCCCCHHHHEEEECCCCKKKK
                    This parameter specifies how  often  (in  seconds)
                    the  shell  will  check for the arrival of mail in
                    the  files  specified  by  the  MMMMAAAAIIIILLLLPPPPAAAATTTTHHHH  or  MMMMAAAAIIIILLLL
                    parameters.   If  set  to  0, the shell will check
                    before each prompt.

               MMMMAAAAIIIILLLLPPPPAAAATTTTHHHH
                    A semi-colon (;;;;) separated list of file names.  If
                    this  parameter is set, the shell informs the user
                    of the arrival of mail in  any  of  the  specified
                    files.  Each  file name can be followed by %%%% and a
                    message that will be printed when the modification
                    time  changes.   The  default message is "_y_o_u _h_a_v_e
                    _m_a_i_l".




     Page 10                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               OOOOLLLLDDDDPPPPWWWWDDDD
                    The previous  working  directory  set  by  the  ccccdddd
                    command.

               OOOOPPPPTTTTAAAARRRRGGGG
                    The value of the last option argument processed by
                    the ggggeeeettttooooppppttttssss special command.

               OOOOPPPPTTTTIIIINNNNDDDD
                    The index of the last option argument processed by
                    the ggggeeeettttooooppppttttssss special command.

               OOOOSSSSMMMMOOOODDDDEEEE
                    The operating system  under  which  the  shell  is
                    running (0 - MMMMSSSS----DDDDOOOOSSSS; 1 - OOOOSSSS////2222; 2 - MMMMSSSS WWWWiiiinnnnddddoooowwwwssss NNNNTTTT).

               PPPPAAAATTTTHHHH The  search  path  for  commands  (see   _E_x_e_c_u_t_i_o_n
                    below).  The user may not change PPPPAAAATTTTHHHH if executing
                    under _r_s_h.  (Note that because a colon is used  by
                    MMMMSSSS----DDDDOOOOSSSS  to  indicate a drive, a semi-colon is used
                    to separate the path names instead of  a  colon  -
                    this  implies  that  the PATH variable must be set
                    using single or  double  quotes  to  surround  the
                    value).   The  Shell  automatically  converts Unix
                    format PPPPAAAATTTTHHHH  assignments  to  MMMMSSSS----DDDDOOOOSSSS  format  when
                    appropriate.   A  assignment is converted if there
                    are no semi-colons, no \\\\s and one or more  colons.
                    If  there  is  only  one colon, it must not be the
                    second character of the new value.

               PPPPAAAATTTTHHHHEEEEXXXXTTTTSSSS
                    The variable PPPPAAAATTTTHHHHEEEEXXXXTTTTSSSS contains the list  of  valid
                    extensions  for  which the shell should check when
                    looking for an file  to  execute.   This  variable
                    allows  the  user to specify a function to execute
                    if a file with an extension in PPPPAAAATTTTHHHHEEEEXXXXTTTTSSSS  is  found
                    (see _F_u_n_c_t_i_o_n_s below).

               PPPPWWWWDDDD  The  present  working  directory  set  by  the  ccccdddd
                    command.

               PPPPSSSS1111  Primary prompt string, by default ``$$$$ ''.

               PPPPSSSS2222  Secondary prompt string, by default ``>>>> ''.

               PPPPSSSS3333  Selection prompt string used within a select loop,
                    ``####???? ''.

               PPPPSSSS4444  The  value  of  this  parameter  is  expanded  for
                    parameter  substitution  and precedes each line of
                    an execution trace.   If  omitted,  the  execution
                    trace prompt is ``+ ''.



     Page 11                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               RRRRAAAANNNNDDDDOOOOMMMM
                    Each time this parameter is referenced,  a  random
                    integer  is  generated.   The  sequence  of random
                    numbers can be initialised by assigning a  numeric
                    value to RRRRAAAANNNNDDDDOOOOMMMM.

               RRRREEEEPPPPLLLLYYYY
                    This parameter is set by the sssseeeelllleeeecccctttt statement  and
                    by  the rrrreeeeaaaadddd special command when no arguments are
                    supplied.

               SSSSEEEECCCCOOOONNNNDDDDSSSS
                    Each time this parameter is referenced, the number
                    of seconds since shell invocation is returned.  If
                    this parameter is assigned a value, then the value
                    returned upon reference will be the value that was
                    assigned plus the  number  of  seconds  since  the
                    assignment.

               SSSSHHHHEEEELLLLLLLL
                    When  the  shell  is   invoked,   it   scans   the
                    environment (see _E_n_v_i_r_o_n_m_e_n_t below) for this name.
                    If it is found and there is an  'r'  in  the  file
                    name  part  of  its  value,  the  shell  becomes a
                    restricted  shell.   The  shell  also  uses   this
                    variable  to  decide  which  program  to  spawn to
                    interpret shell scripts (see _E_x_e_c_u_t_i_o_n below).

               SSSSHHHHMMMMOOOODDDDEEEE
                    The compilation mode of shell - 16 or 32 bit.

               SSSSTTTTAAAARRRRTTTTWWWWIIIINNNNPPPP
                    This variable,  set  by  the  user,  contains  the
                    program  to  run to start a MS Windows application
                    when the shell is running under MS  Windows.   The
                    variable may contain parameters to that program as
                    well.  The shell assumes that the  parameters  are
                    separated by white space.  If this variable is not
                    set,  the  shell  will  not   start   MS   Windows
                    applications when running under MS Windows.

               VVVVIIIISSSSUUUUAAAALLLL
                    If the value of this variable ends in emacs or vi,
                    then the corresponding option is turned on.

               TTTTMMMMPPPP  The location of temporary  files  created  by  the
                    shell.  If this variable is not defined, the Shell
                    uses  the  HHHHOOOOMMMMEEEE  directory  for  temporary  files.
                    Failing  that,  the  root directory of the current
                    drive is used.

               WWWWIIIINNNNTTTTIIIITTTTLLLLEEEE



     Page 12                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    Under OOOOSSSS////2222, the name of the shell's window.

          The shell gives default values to  PPPPAAAATTTTHHHH,  PPPPSSSS1111,  PPPPSSSS2222,  SSSSHHHHEEEELLLLLLLL,
          HHHHOOOOMMMMEEEE and IIIIFFFFSSSS.

        AAAAlllltttteeeerrrrnnnnaaaattttiiiioooonnnn
          The ccccsssshhhh  provides  a  filename  expansion  method  known  as
          alternation.   This  has been added into this version of the
          ksh.  When performing filename substitution, you can get the
          shell  to  create  a  set  of strings for you.  For example:
          _e_x_a_m_p_l{_a,_b,_c,_d,_e} will expand  to  _e_x_a_m_p_l_a  _e_x_a_m_p_l_b  _e_x_a_m_p_l_c
          _e_x_a_m_p_l_d _e_x_a_m_p_l_e.  A common separated set of strings in curly
          braces will be expanded into  a  set  of  strings  that  are
          passed  into  the command.  The strings are not sorted.  The
          set of strings may contain parameter substitutions.

        AAAArrrriiiitttthhhhmmmmeeeettttiiiicccc EEEExxxxppppaaaannnnssssiiiioooonnnn
          A string of the form $$$$((((((((_e_x_p)))))))) is substituted with the  value
          of  the  arithmetic expression _e_x_p.  _e_x_p is treated as if it
          were within single quotes.  See AAAArrrriiiitttthhhhmmmmeeeettttiiiicccc EEEEvvvvaaaalllluuuuaaaattttiiiioooonnnn below.

        BBBBllllaaaannnnkkkk IIIInnnntttteeeerrrrpppprrrreeeettttaaaattttiiiioooonnnn
          After parameter and command  substitution,  the  results  of
          substitution   are  scanned  for  internal  field  separator
          characters (those found in  IIIIFFFFSSSS)  and  split  into  distinct
          arguments  where  such  characters are found.  Explicit null
          arguments ("""""""" or '''''''') are retained.  Implicit null  arguments
          (those  resulting  from  _p_a_r_a_m_e_t_e_r_s that have no values) are
          removed.

        FFFFiiiilllleeee NNNNaaaammmmeeee GGGGeeeennnneeeerrrraaaattttiiiioooonnnn
          Following substitution, each command _w_o_r_d is scanned for the
          characters  ****,  ???? and [[[[.  If one of these characters appears
          the word is regarded as a _p_a_t_t_e_r_n.   The  word  is  replaced
          with   alphabetically  sorted  file  names  that  match  the
          pattern.  If no file name is found that matches the pattern,
          the word is left unchanged.  The character .... at the start of
          a file name or immediately following a ////,  as  well  as  the
          character  ////  itself,  must  be  matched  explicitly.   When
          matching patterns for file names, the shell ignores the case
          of  the  pattern  and the file directory entries.  Generated
          file names are always in lower case (for FAT file  systems).
          Under HPFS on OOOOSSSS////2222, case is preserved.

               ****    Matches any string, including the null string.

               ????    Matches any single character.

               [[[[ ............ ]]]]
                    Matches any one of  the  enclosed  characters.   A
                    pair  of  characters  separated  by  ---- matches any
                    character lexically between the  pair,  inclusive.



     Page 13                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    If the first character following the opening ``[''
                    is a ````````!!!!'''''''' any character not enclosed is matched.

          If the shell has to open or  create  the  file  ////ddddeeeevvvv////ttttttttyyyy  or
          ////ddddeeeevvvv////nnnnuuuullllllll (which are Unix special files), they are converted
          to the equivalent MMMMSSSS----DDDDOOOOSSSS file names (////ddddeeeevvvv////ccccoooonnnn  and  ////ddddeeeevvvv////nnnnuuuullll
          respectively).    Any   user  programs  which  could  expect
          ////ddddeeeevvvv////ttttttttyyyy or ////ddddeeeevvvv////nnnnuuuullllllll as arguments must do its  own  mapping
          to the MMMMSSSS----DDDDOOOOSSSS equivalents.

          The shell checks for valid FAT filenames (single dot, not at
          the beginning).  Invalid dots are converted to ~~~~.  A warning
          message is displayed if the shell detects  an  invalid  file
          name.

        QQQQuuuuoooottttiiiinnnngggg
          The following characters have a special meaning to the shell
          and cause termination of a word unless quoted:

               ;;;;  &&&&  ((((  ))))  ||||  ^^^^  <<<<  >>>>  nnnneeeewwww----lllliiiinnnneeee  ssssppppaaaacccceeee  ttttaaaabbbb

          A character may be _q_u_o_t_e_d (i.e., made to stand  for  itself)
          by  preceding  it  with a \\\\.  The pair \\\\nnnneeeewwww----lllliiiinnnneeee is ignored.
          All characters enclosed between a pair of single quote marks
          (''''''''),  except  a  single  quote,  are quoted.  Inside double
          quote marks (""""""""), parameter and command substitution  occurs
          and  \\\\  quotes  the  characters  \\\\,  ````,  """",  and  $$$$. """"$$$$****"""" is
          equivalent to """"$$$$1111 $$$$2222 ............"""", whereas  """"$$$$@@@@""""  is  equivalent  to
          """"$$$$1111"""" """"$$$$2222"""" .............

        AAAArrrriiiitttthhhhmmmmeeeettttiiiicccc EEEEvvvvaaaalllluuuuaaaattttiiiioooonnnn
          An ability to perform integer arithmetic  is  provided  with
          the  special  command  lllleeeetttt.  Evaluations are performed using
          _l_o_n_g arithmetic.  Constants are of  the  form  _b_a_s_e#_n  where
          _b_a_s_e   is  a  decimal  number  between  two  and  thirty-six
          representing the arithmetic base and _n is a number  in  that
          base.  If _b_a_s_e# is omitted then base 10 is used.

          An  arithmetic  expression  uses  nearly  the  same   syntax
          precedence,  and  associatively  of  expression  as  C.  The
          following set of operators, listed in  order  of  decreasing
          precedence, have been implemented:

          - + ! ~ ++ --     unary    minus/plus,    logical     NOT,
                            complement, {pre, post}{in,de}crement
          &                 Logical AND
          ^                 Logical XOR
          |                 Logical OR
          *  /  %           multiplication, division, remainder
          +  -              addition, subtraction





     Page 14                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          << >>             Logical shift left and right
          <=  >=  <  >      comparison
          ==  !=            equality  inequality
          &&                Logical AND
          || ^^             Logical OR, XOR
          ? :               Ternary operator
          = += -=  *=  /=   assignment
          %= &= ^= |= <<=
          >>= &&= ||= ^^=

          The operators &&&&&&&&, ||||||||, &&&&&&&&==== and ||||||||==== are  short-circuiting  and
          only one of the latter two expressions in a ternary operator
          is evaluated.  Note the precedence of the logical  AND,  XOR
          and OR operators.

          Sub-expressions in parentheses () are  evaluated  first  and
          can be used to override the above precedence rules.

          Named  parameters  can  be  reference  by  name  within   an
          expression without using the parameter substitution syntax.

          Since many of the arithmetic operators require  quoting,  an
          alternative  form  of  the lllleeeetttt command is provided.  For any
          command which begins with a ((((((((, all the characters  until  a
          matching  ))))))))  are  treated  as  a  quoted  expression.  More
          precisely, ((((((((............))))))))  is equivalent to lllleeeetttt """"............"""".

        PPPPrrrroooommmmppppttttiiiinnnngggg
          When used interactively, the shell prompts with the value of
          PPPPSSSS1111  before reading a command.  If at any time a new-line is
          typed and further input is needed to complete a command, the
          secondary prompt (i.e., the value of PPPPSSSS2222) is issued.

          Many people like to have the shell provide them with  useful
          information in their prompt.  To accommodate this, the shell
          recognises special sequences of characters in the values  of
          PPPPSSSS1111 and PPPPSSSS2222, and substitutes the appropriate information for
          them.  The special sequences and what they signify are:

               %%%%dddd   Place the current date, in the form  DAY  DD-MM-YY
                    into the prompt.

               %%%%eeee   Place the current event number (as defined by  the
                    hhhhiiiissssttttoooorrrryyyy  command)  into  the  prompt.   If history
                    evaluation has been turned off (via  hhhhiiiissssttttoooorrrryyyy  ----dddd),
                    no number will be substituted in (i.e. the %%%%eeee will
                    be removed).

               %%%%nnnn   Place the current working drive into the prompt.

               %%%%pppp   Place  the  current  working  directory  into  the
                    prompt.



     Page 15                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               %%%%tttt   Place the current time of day, in the  form  HH:MM
                    into  the prompt.  The time is on a 24 hour clock,
                    i.e. 1:30 in the afternoon will be 13:30.

               %%%%vvvv   Place the operating system version number, in  the
                    form _O_S _n_a_m_e MM:MM into the prompt.

               %%%%%%%%   Place the character % into the prompt.

               \\\\xxxxxxxxxxxx Place the character \_x_x_x  into  the  prompt.   The
                    processing of escape sequences is the same as that
                    for eeeecccchhhhoooo.

          Some of these facilities are of more use than others.

        IIIInnnnppppuuuutttt////OOOOuuuuttttppppuuuutttt
          Before a command is executed, its input and  output  may  be
          redirected  using  a  special  notation  interpreted  by the
          shell.  The following  may  appear  anywhere  in  a  simple-
          command  or  may  precede  or  follow  a _c_o_m_m_a_n_d and are _n_o_t
          passed on to the invoked command; substitution occurs before
          _w_o_r_d or _d_i_g_i_t is used:

          <<<<wwwwoooorrrrdddd         Use  file  _w_o_r_d  as   standard   input   (file
                        descriptor 0).

          >>>>wwwwoooorrrrdddd         Use  file  _w_o_r_d  as  standard   output   (file
                        descriptor  1).  If the file does not exist it
                        is created; otherwise, it is truncated to zero
                        length.

          >>>>>>>>wwwwoooorrrrdddd        Use file _w_o_r_d as standard output.  If the file
                        exists  output  is  appended  to  it (by first
                        seeking to the  end-of-file);  otherwise,  the
                        file is created.

          <<<<<<<<[----]wwwwoooorrrrdddd     The shell input is read up to a line  that  is
                        the  same  as _w_o_r_d, or to an end-of-file.  The
                        resulting document becomes the standard input.
                        If   any  character  of  _w_o_r_d  is  quoted,  no
                        interpretation is placed upon  the  characters
                        of  the  document;  otherwise,  parameter  and
                        command  substitution   occurs,   (un-escaped)
                        \\\\nnnneeeewwww----lllliiiinnnneeee  is  ignored,  and \\\\ must be used to
                        quote the characters \\\\, $$$$, ````,  and  the  first
                        character  of  _w_o_r_d.   If ---- is appended to <<<<<<<<,
                        all leading tabs are stripped  from  _w_o_r_d  and
                        from the document.

          <<<<&&&&ddddiiiiggggiiiitttt       Use the file associated with  file  descriptor
                        _d_i_g_i_t  as  standard  input.  Similarly for the
                        standard output using >>>>&&&&ddddiiiiggggiiiitttt.



     Page 16                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          <<<<&&&&----           The standard input is closed.   Similarly  for
                        the standard output using >>>>&&&&----.

          nnnn<<<<>>>>wwwwoooorrrrdddd       causes the file _w_o_r_d  to  be  opened  on  file
                        descriptor  _n  for  both  reading and writing.
                        The file must already exist.

          If any of the  above  is  preceded  by  a  digit,  the  file
          descriptor  which  will  be associated with the file is that
          specified by the digit (instead of the default 0 or 1).  For
          example:

               ... 2>&1

          associates  file  descriptor  2  with  the  file   currently
          associated with file descriptor 1.

          The  order  in   which   redirections   are   specified   is
          significant.   The  shell  evaluates  redirections  left-to-
          right.  For example:

               ... 1>_x_x_x 2>&1

          first associates  file  descriptor  1  with  file  _x_x_x.   It
          associates  file  descriptor 2 with the file associated with
          file descriptor 1 (i.e. _x_x_x).  If the order of  redirections
          were  reversed,  file  descriptor 2 would be associated with
          the terminal (assuming file descriptor 1 had been) and  file
          descriptor 1 would be associated with file _x_x_x .

          The environment for the execution of a command contains  the
          file  descriptors  of  the  invoking  shell  as  modified by
          input/output specifications.

          Redirection of output  is  not  allowed  in  the  restricted
          shell.

        EEEEnnnnvvvviiiirrrroooonnnnmmmmeeeennnntttt
          The _e_n_v_i_r_o_n_m_e_n_t (see _e_n_v_i_r_o_n(5)) is  a  list  of  name-value
          pairs  that is passed to an executed program in the same way
          as a normal argument list.  The  shell  interacts  with  the
          environment in several ways.  On invocation, the shell scans
          the environment and creates a parameter for each name found,
          giving it the corresponding value.  If the user modifies the
          value of any of these parameters or creates new  parameters,
          none  of  these  affects  the  environment unless the eeeexxxxppppoooorrrrtttt
          command is  used  to  bind  the  shell's  parameter  to  the
          environment  (see  also sssseeeetttt ----aaaa).  A parameter may be removed
          from  the  environment  with   the   uuuunnnnsssseeeetttt   command.    The
          environment seen by any executed command is thus composed of
          any unmodified name-value pairs originally inherited by  the
          shell,   minus   any   pairs  removed  by  uuuunnnnsssseeeetttt,  plus  any



     Page 17                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          modifications or additions, all of which must  be  noted  in
          eeeexxxxppppoooorrrrtttt commands.

          The environment for any _s_i_m_p_l_e-_c_o_m_m_a_n_d may be  augmented  by
          prefixing  it  with  one  or more assignments to parameters.
          Thus:

               TERM=450 cmd args

          and

               (export TERM; TERM=450; cmd args)

          are  equivalent  (as  far  as  the  execution  of   _c_m_d   is
          concerned).

          If the ----kkkk flag is set, _a_l_l keyword arguments are  placed  in
          the  environment, even if they occur after the command name.
          The following first prints aaaa====bbbb cccc and cccc:

               echo a=b c
               set -k
               echo a=b c

        SSSSiiiiggggnnnnaaaallllssss
          The INTERRUPT and QUIT signals for an  invoked  command  are
          ignored  if  the command is followed by &&&&; otherwise signals
          have the values inherited by the shell from its parent, with
          the  exception  of  signal 11 (but see also the ttttrrrraaaapppp command
          below).

        CCCCoooommmmmmmmaaaannnndddd RRRReeee----eeeennnnttttrrrryyyy
          The text  of  the  last  HHHHIIIISSSSTTTTSSSSIIIIZZZZEEEE  (default:  100)  commands
          entered  from  a terminal device is saved in a _h_i_s_t_o_r_y file.
          The file $$$$HHHHOOOOMMMMEEEE////hhhhiiiissssttttoooorrrryyyy....sssshhhh is used if the  HHHHIIIISSSSTTTTFFFFIIIILLLLEEEE  variable
          is  not set.  The special command ffffcccc is used to list or edit
          a portion of this file.  The  portion  of  the  file  to  be
          edited  or listed can be selected by number or by giving the
          first character or characters  of  the  command.   A  single
          command  or  range  of commands can be specified.  If you do
          not specify an editor program as  an  argument  to  ffffcccc,  the
          value  of  the parameter FFFFCCCCEEEEDDDDIIIITTTT is used.  The edited command
          is printed and re-executed upon  leaving  the  editor.   The
          editor  name  ---- is used to skip the editing phase and to re-
          execute the command.  In this case a substitution  parameter
          of the form _o_l_d====_n_e_w can be used to modify the command before
          execution.  For example, if rrrr  is  aliased  to  ````ffffcccc  ----eeee  ----'''',
          typing  `rrrr  bbbbaaaadddd====ggggoooooooodddd  cccc' re-executes the most recent command
          that starts  with  the  letter  cccc  and  replaces  the  first
          occurrence of the string bbbbaaaadddd with the string ggggoooooooodddd.

        HHHHiiiissssttttoooorrrryyyy



     Page 18                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          When reading input from  an  interactive  terminal  and  vvvviiii,
          eeeemmmmaaaaccccssss or ggggmmmmaaaaccccssss input editing mode has not been selected (see
          IIIInnnn----lllliiiinnnneeee EEEEddddiiiittttiiiinnnngggg OOOOppppttttiiiioooonnnnssss), a ``!'' at the  start  of  a  line
          signals  to  the  shell  that it should attempt to perform a
          history substitution.  A history substitution  is  a  short-
          hand  method  which  allows  the  user  to recall a previous
          command for execution or editing.  The recalled  command  is
          placed  in  the  command  line for editing or passing to the
          rest  of  the  shell  for  normal  processing.   A   history
          substitution takes the form:

               !!!! [ ! | _s_t_r | _n_u_m ] _t_e_r_m_i_n_a_t_o_r

          !!!!!!!! will place the previous  command  in  the  command  line.
          !!!!_n_u_m  will  place  the  history  command  with the specified
          number in the command line.  !!!!_s_t_r will find the most  recent
          command line that started with the characters in _s_t_r.

          The _t_e_r_m_i_n_a_t_o_r determines what action is performed after the
          history  line  has  been  found.   If  the  original history
          command is entered using the <<<<rrrreeeettttuuuurrrrnnnn>>>> key, the  new  command
          line  is  passed directly to the shell.  If the <<<<eeeennnndddd>>>> key is
          pressed, the new command line can be edited  in  the  manner
          described below.

        CCCCoooommmmmmmmaaaannnndddd LLLLiiiinnnneeee EEEEddddiiiittttiiiinnnngggg
          When reading input from  an  interactive  terminal,  certain
          keystrokes  allow  the current input line to be edited.  The
          following  keystrokes   corresponding   to   the   following
          functions  are  defined  in  the initialisation file sssshhhh....iiiinnnniiii.
          The keywords in the initialisation file  which  provide  the
          functions are listed below:

          RRRRiiiigggghhhhtttt
               Move the cursor right one character

          WWWWoooorrrrddddRRRRiiiigggghhhhtttt
               Move the cursor right one word

          LLLLeeeefffftttt Move the cursor left one character

          WWWWoooorrrrddddLLLLeeeefffftttt
               Move the cursor left one word

          PPPPrrrreeeevvvviiiioooouuuussss
               Get the previous command from the history file

          NNNNeeeexxxxtttt Get the next command from the history file

          IIIInnnnsssseeeerrrrtttt
               Toggle insert/overwrite mode (note  the  shape  of  the
               cursor changes to indicate the current mode)



     Page 19                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          DDDDeeeelllleeeetttteeeeRRRRiiiigggghhhhtttt
               Delete the current character unless the  cursor  is  at
               the end of line when no action is taken

          SSSSttttaaaarrrrtttt
               Move the cursor to the start of the command

          CCCCoooommmmpppplllleeeetttteeee
               Attempt to complete the filename.  The  shell  attempts
               to  complete  the  file  name  at  the  current  cursor
               position.  The file name is delimited  by  white  space
               characters.   If  the  shell  is unable to complete the
               file name (ie no match can be found in the  appropriate
               directory),  the  bell  is  rung.  If a single match is
               found, the new file name  is  displayed.   If  multiple
               matches  are  found,  the  file name is replaced by the
               longest non-unique part of the file name and  the  bell
               is rung.

          EEEEnnnndddd  Move the cursor to the end of the command,  unless  the
               first  character  of  the command is a !!!!, in which case
               the appropriate history search is done.  The cursor  is
               placed at the end of the command line.

          FFFFlllluuuusssshhhh
               Delete to the end of the line

          SSSSccccaaaannnnBBBBaaaacccckkkkwwwwaaaarrrrdddd
               Search backwards from the current history  command  for
               the  next match against the last history request or the
               string currently in the command line if there has  been
               no previous history request.

          SSSSccccaaaannnnFFFFoooorrrreeeewwwwaaaarrrrdddd
               Search forewards from the current history  command  for
               the  next match against the last history request or the
               string currently in the command line if there has  been
               no previous history request.

          CCCClllleeeeaaaarrrr
               Erase the complete line.

          CCCClllleeeeaaaarrrrSSSSccccrrrreeeeeeeennnn
               Clears the complete  screen.   This  function  is  only
               available under OOOOSSSS////2222.

          DDDDiiiirrrreeeeccccttttoooorrrryyyy
               Display the  file  name  list  matching  the  partially
               entered  file name under the cursor.  If no matches are
               found  the  bell  is  rung.   To  display   the   whole
               directory, enter the directory name followed by a slash
               ////.  After the directory listing has been displayed, the



     Page 20                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               entered command line is redisplayed.

          DDDDeeeelllleeeetttteeeeLLLLeeeefffftttt
               Delete the character to the left of the cursor.

          RRRReeeettttuuuurrrrnnnn
               Execute the command line, unless the first character of
               the  command  is  a  !!!!,  in  which case the appropriate
               history processing is done.  _T_h_i_s  _i_s  _t_h_e  _a_c_t_u_a_l  _k_e_y
               _p_r_e_s_s_e_d  _a_n_d  _c_a_n_n_o_t  _b_e _m_o_d_i_f_i_e_d _b_y _t_h_e _i_n_i_t_i_a_l_i_s_a_t_i_o_n
               _f_i_l_e.

          JJJJoooobbbbssss Print a list of the child processes of the shell.  This
               function is only available under OOOOSSSS////2222.

          TTTTrrrraaaannnnssssppppoooosssseeee
               Transpose the two characters under the cursor.

          QQQQuuuuooootttteeee
               Disable any special processing for the next keystroke.

        IIIInnnn----lllliiiinnnneeee EEEEddddiiiittttiiiinnnngggg OOOOppppttttiiiioooonnnnssss
          Normally, each command line entered from a  terminal  device
          is  simply  typed  followed by a new-line (`RETURN' or `LINE
          FEED'), see previous section.  If the vvvviiii option  is  active,
          the user can edit the command line.  To be in this edit mode
          sssseeeetttt the vvvviiii  option.   An  editing  option  is  automatically
          selected each time the VVVVIIIISSSSUUUUAAAALLLL or EEEEDDDDIIIITTTTOOOORRRR variable is assigned
          a value ending in either of these option names.

          The editing mode implements a  concept  where  the  user  is
          looking  through  a  window at the current line.  The window
          width is the value of CCCCOOOOLLLLUUUUMMMMNNNNSSSS if it  is  defined,  otherwise
          _8_0.   If the line is longer than the window width minus two,
          a mark is displayed at the end of the window to  notify  the
          user.  As the cursor moves and reaches the window boundaries
          the window will be centred about the cursor.  The mark is  a
          >>>>  (<<<<,  ****)  if  the  line  extends on the right (left, both)
          side(s) of the window.

          The search commands in each edit mode provide access to  the
          history  file.   Only  strings  are  matched,  not patterns,
          although a leading ^^^^ in the string restricts  the  match  to
          begin at the first character in the line.

        VVVViiii EEEEddddiiiittttiiiinnnngggg MMMMooooddddeeee
          There are two typing modes.  Initially,  when  you  enter  a
          command you are in the input mode.  To edit, the user enters
          control mode by typing ESC (\\\\000033333333) and moves  the  cursor  to
          the  point  needing  correction  and then inserts or deletes
          characters or words as needed.  Most control commands accept
          an optional repeat count prior to the command.



     Page 21                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          In edit mode, the key mappings defined in the initialisation
          file are mapped onto the appropriate vvvviiii edit command.

          IIIInnnnppppuuuutttt EEEEddddiiiitttt CCCCoooommmmmmmmaaaannnnddddssss

          By default the editor is in input mode.

               _b_a_c_k_s_p_a_c_e
                    Deletes previous character.

               CCCCttttrrrrllll----WWWW
                    Deletes the previous blank separated word.

               CCCCttttrrrrllll----DDDD
                    Terminates the shell.

               CCCCttttrrrrllll----VVVV
                    Escapes the next  character.   Editing  characters
                    can  be  entered  in a command line or in a search
                    string  if  preceded  by  a  CCCCttttrrrrllll----VVVV.   The  CCCCttttrrrrllll----VVVV
                    removes  the next character's editing features (if
                    any).

               \\\\    Escapes the next _e_d_i_t_i_n_g character.

          MMMMoooottttiiiioooonnnn EEEEddddiiiitttt CCCCoooommmmmmmmaaaannnnddddssss

          These commands move the cursor:

               [_C_o_u_n_t]llll
                    Moves the cursor forward (right) one character.

               [_C_o_u_n_t]wwww
                    Moves the cursor forward one alphanumeric word.

               [_C_o_u_n_t]WWWW
                    Moves the cursor to the beginning of the next word
                    that follows a blank.

               [_C_o_u_n_t]eeee
                    Moves the cursor to end of the current word.

               [_C_o_u_n_t]EEEE
                    Moves the cursor to  end  of  the  current  blank-
                    separated word.

               [_C_o_u_n_t]hhhh
                    Moves the cursor backward (left) one character.

               [_C_o_u_n_t]bbbb
                    Moves the cursor backward one word.




     Page 22                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               [_C_o_u_n_t]BBBB
                    Moves the cursor to the  previous  blank-separated
                    word.

               [_C_o_u_n_t]||||
                    Moves the cursor to the column  specified  by  the
                    _c_o_u_n_t parameter.

               [_C_o_u_n_t]ffffcccc
                    Finds the next character _c in the current line.

               [_C_o_u_n_t]FFFFcccc
                    Finds the previous  character  _c  in  the  current
                    line.

               [_C_o_u_n_t]ttttcccc
                    Equivalent to ffff followed by hhhh.

               [_C_o_u_n_t]TTTTcccc
                    Equivalent to FFFF followed by llll.

               [_C_o_u_n_t];;;;
                    Repeats for the number of times specified  by  the
                    _c_o_u_n_t  parameter  the  last  single-character find
                    command: ffff, FFFF, tttt, or TTTT.

               [_C_o_u_n_t],,,,
                    Reverses the last  single-character  find  command
                    the   number  of  times  specified  by  the  _c_o_u_n_t
                    parameter.

               0000    Moves the cursor to start of line.

               ^^^^    Moves the cursor to first non-blank  character  in
                    line.

               $$$$    Moves the cursor to end of line.

          SSSSeeeeaaaarrrrcccchhhh EEEEddddiiiitttt CCCCoooommmmmmmmaaaannnnddddssss

          These commands access your command history:

               [_C_o_u_n_t]kkkk
                    Fetches the previous  command.   Each  time  kkkk  is
                    entered, the previous command is accessed.

               [_C_o_u_n_t]----
                    Equivalent to kkkk.

               [_C_o_u_n_t]jjjj
                    Fetches the next command.  Each time jjjj is entered,
                    the next command is accessed.



     Page 23                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               [_C_o_u_n_t]++++
                    Equivalent to jjjj.

               [_C_o_u_n_t]GGGG
                    Fetches the command whose number is  specified  by
                    the  _c_o_u_n_t  parameter.   The  default is the least
                    recent history command.

               ////_S_t_r_i_n_g
                    Searches backward through history for  a  previous
                    command  containing  the  specified  _s_t_r_i_n_g.   The
                    _s_t_r_i_n_g is  terminated  by  a  RETURN  or  new-line
                    character.  If the specified string is preceded by
                    a ^^^^ (caret), the  matched  line  must  begin  with
                    _s_t_r_i_n_g.   If  the value of the _s_t_r_i_n_g parameter is
                    null, the previous string is used.

               ????_S_t_r_i_n_g
                    Same as ////_S_t_r_i_n_g except that the search is  in  the
                    forward direction.

               nnnn    Searches for the next match of the last pattern to
                    //// or ???? commands.

               NNNN    Searches for the next match of the last pattern to
                    ////  or  ????  commands, but in the opposite direction.
                    Searches history for the  _s_t_r_i_n_g  entered  by  the
                    previous //// command.

          TTTTeeeexxxxtttt MMMMooooddddiiiiffffiiiiccccaaaattttiiiioooonnnn EEEEddddiiiitttt CCCCoooommmmmmmmaaaannnnddddssss

          These commands modify the line:

               aaaa    Enters the input mode and enters  text  after  the
                    current character.

               AAAA    Appends text to the end of the  line.   Equivalent
                    to $$$$aaaa.

               [_C_o_u_n_t]cccc_M_o_t_i_o_n
               cccc[_C_o_u_n_t]_M_o_t_i_o_n
                    Deletes  the   current   character   through   the
                    character  to which the _m_o_t_i_o_n parameter specifies
                    to move the cursor, and enters input mode.  If the
                    value  of  the  _m_o_t_i_o_n  parameter is cccc, the entire
                    line is deleted and the input mode is entered.

               CCCC    Deletes the current character through the  end  of
                    the line and enters input mode.  Equivalent to cccc$$$$.

               SSSS    Equivalent to cccccccc.




     Page 24                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               DDDD    Deletes the current character through the  end  of
                    line.  Equivalent to dddd$$$$.

               [_C_o_u_n_t]dddd_M_o_t_i_o_n
               dddd[_C_o_u_n_t]_M_o_t_i_o_n
                    Deletes the current character up to and  including
                    the  character  specified by the _m_o_t_i_o_n parameter.
                    If _m_o_t_i_o_n is dddd, the entire line is deleted.

               iiii    Enters the input mode and inserts text before  the
                    current character.

               IIII    Inserts text before the  beginning  of  the  line.
                    Equivalent to 0000iiii.

               [_C_o_u_n_t]PPPP
                    Places the previous text modification  before  the
                    cursor.

               [_C_o_u_n_t]pppp
                    Places the previous text  modification  after  the
                    cursor.

               RRRR    Enters  the  input  mode  and   types   over   the
                    characters on the screen.

               [_C_o_u_n_t]rrrr_c
                    Replaces the number of characters specified by the
                    _c_o_u_n_t  parameter,  starting  at the current cursor
                    position, with the characters specified by  the  _c
                    variable.    Advances   the   cursor   after   the
                    characters are replaced.

               [_C_o_u_n_t]xxxx
                    Deletes the current character.

               [_C_o_u_n_t]XXXX
                    Deletes the preceding character.

               [_C_o_u_n_t]....
                    Repeats the previous text modification command.

               [_C_o_u_n_t]~~~~
                    Inverts the  case  of  the  number  of  characters
                    specified  by the _c_o_u_n_t parameter, starting at the
                    current cursor position, and advances the cursor.

               [_C_o_u_n_t]____
                    Causes the word specified by the  _c_o_u_n_t  parameter
                    word  of  the previous command to be appended, and
                    enters input mode.  The last word is used  if  the
                    _c_o_u_n_t parameter is omitted.



     Page 25                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               ****    Appends an **** (asterisk) to the  current  word  and
                    attempts  filename  substitution.   If no match is
                    found, it rings the bell.  Otherwise, the word  is
                    replaced by the matching pattern and input mode is
                    entered.

               \\\\    File-name completion.  Replaces the  current  word
                    with  the  longest common prefix of all file names
                    matching  the  current  word  with   an   asterisk
                    appended.   If the match is unique, a //// (slash) is
                    appended if the file is a directory and a space is
                    appended if the file is not a directory.

          OOOOtttthhhheeeerrrr EEEEddddiiiitttt CCCCoooommmmmmmmaaaannnnddddssss

          Other miscellaneous edit commands include:

               [_C_o_u_n_t]yyyy_M_o_t_i_o_n
               yyyy[_C_o_u_n_t]_M_o_t_i_o_n
                    Yanks the current character through the  character
                    to  which  the  _m_o_t_i_o_n parameter specifies to move
                    the cursor and  puts  these  characters  into  the
                    delete buffer.  The text and cursor are unchanged.

               YYYY    Yanks from the current position to the end of  the
                    line.  Equivalent to yyyy$$$$.

               uuuu    Undoes the last text-modifying command.

               UUUU    Undoes all the text-modifying  commands  performed
                    on the line.

               [_C_o_u_n_t]vvvv
                    Returns the command ffffcccc ----eeee $$$${{{{VVVVIIIISSSSUUUUAAAALLLL::::----$$$${{{{EEEEDDDDIIIITTTTOOOORRRR::::----vvvviiii}}}}}}}}
                    _c_o_u_n_t in the input buffer.  If the _c_o_u_n_t parameter
                    is omitted, then the current line is used.

               CCCCttttrrrrllll----LLLL
                    Line-feeds  and  prints  the  current  line.   Has
                    effect only in control mode.

               CCCCttttrrrrllll----JJJJ
                    (New line) Executes the current  line,  regardless
                    of the mode.

               CCCCttttrrrrllll----MMMM
                    (Return) Executes the current line, regardless  of
                    the mode.

               ####    Sends the line after inserting a #### (hash sign)  in
                    front of the line.  Useful for causing the current
                    line to be inserted in the history  without  being



     Page 26                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    executed.

               ====    Lists the file names that match the  current  word
                    as if an asterisk were appended to it.

               @@@@LLLLeeeetttttttteeeerrrr
                    Searches  the  alias  list  for  an  alias   named
                    _Letter.  If an alias of this name is defined, its
                    value  is  placed  into  the   input   queue   for
                    processing.

        EEEEMMMMAAAACCCCSSSS EEEEddddiiiittttiiiinnnngggg MMMMooooddddeeee
          When the eeeemmmmaaaaccccssss option is set, interactive input line editing
          is  enabled.  This mode is slightly different from the emacs
          mode in AT&T's KornShell.   In  this  mode  various  _e_d_i_t_i_n_g
          _c_o_m_m_a_n_d_s (typically bound to one or more control characters)
          cause immediate actions  without  waiting  for  a  new-line.
          Several  _e_d_i_t_i_n_g  _c_o_m_m_a_n_d_s  are  bound to particular control
          characters when the shell is invoked; these bindings can  be
          changed using the bbbbiiiinnnndddd command.

          The following _e_d_i_t_i_n_g _c_o_m_m_a_n_d_s are available, where a  caret
          indicates  the  control  character,  and ^[ is the ASCII ESC
          character.  Note that _e_d_i_t_i_n_g _c_o_m_m_a_n_d names  are  used  only
          with  the bbbbiiiinnnndddd command.  The default bindings were chosen to
          resemble corresponding EMACS key bindings.

          ___________________________________________________________________________________________________________
          Editing command           Default                  Function
          ___________________________________________________________________________________________________________
          pppprrrreeeeffffiiiixxxx----3333                  0xE0                     Introduces a 2-character command sequence.  This  prefix
                                                             allows  the  user to map PC function keys onto commands.
                                                             The second character is the IBM scan code value  of  the
                                                             function key to be assigned.  For example: _F_1 has a scan
                                                             code of ;;;;; _C_t_r_l-_F_1 has a scan code of ^^^^; _S_h_i_f_t-_F_1 has  a
                                                             scan code of TTTT; _A_l_t-_F_1 has a scan code of hhhh.
          bbbbeeeeggggiiiinnnnnnnniiiinnnngggg----ooooffff----lllliiiinnnneeee         Ctrl-A                   Moves the cursor to start of line.
          bbbbaaaacccckkkkwwwwaaaarrrrdddd----cccchhhhaaaarrrr             Ctrl-B                   Moves the cursor backward (left) one character.
          eeeeooootttt----oooorrrr----ddddeeeelllleeeetttteeee             Ctrl-D                   Acts as  _e_n_d-_o_f-_f_i_l_e  if  alone  on  a  line;  otherwise
                                                             deletes current character.
          eeeennnndddd----ooooffff----lllliiiinnnneeee               Ctrl-E                   Moves the cursor to end of line.
          ffffoooorrrrwwwwaaaarrrrdddd----cccchhhhaaaarrrr              Ctrl-F                   Moves the cursor forward one position.
          aaaabbbboooorrrrtttt                     Ctrl-G                   Useful as a response to a request for  a  sssseeeeaaaarrrrcccchhhh----hhhhiiiissssttttoooorrrryyyy
                                                             pattern in order to abort the search.
          ddddeeeelllleeeetttteeee----cccchhhhaaaarrrr----bbbbaaaacccckkkkwwwwaaaarrrrdddd      Ctrl-H                   Deletes the previous character.
          nnnneeeewwwwlllliiiinnnneeee                   Ctrl-M                   Executes the current line.
                                    Ctrl-J
          kkkkiiiillllllll----ttttoooo----eeeeoooollll               Ctrl-K                   Deletes from the cursor to the  end  of  the  line.   If
                                                             preceded  by  a  numerical parameter whose value is less
                                                             than the current cursor position, this  editing  command
                                                             deletes  from  the  given position up to the cursor.  If




     Page 27                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                                                        preceded by a numerical parameter whose value is greater
                                                        than  the  current cursor position, this editing command
                                                        deletes from the cursor up to given cursor position.
     rrrreeeeddddrrrraaaawwww                    Ctrl-L                   Line-feeds and print the current line.
     ddddoooowwwwnnnn----hhhhiiiissssttttoooorrrryyyy              Ctrl-N                   Fetches the next command  line.   Each  time  Ctrl-N  is
                                                        entered,  the  next  command  line  forward  in  time is
                                                        accessed.
     ooooppppeeeerrrraaaatttteeee                   Ctrl-O                   Executes the current line  and  fetches  the  next  line
                                                        relative to the current line from the history file.
     uuuupppp----hhhhiiiissssttttoooorrrryyyy                Ctrl-P                   Fetches the  previous  command.   Each  time  CCCCttttrrrrllll----PPPP  is
                                                        entered,  the previous command back in time is accessed.
                                                        Moves back one line when not on  the  first  line  of  a
                                                        multiple line command.
     sssseeeeaaaarrrrcccchhhh----hhhhiiiissssttttoooorrrryyyy            Ctrl-R _S_t_r_i_n_g            Reverses search history  for  a  previous  command  line
                                                        containing the string specified by the SSSSttttrrrriiiinnnngggg parameter.
                                                        If a value of zero is given, the search is forward.  The
                                                        specified  ssssttttrrrriiiinnnngggg  is terminated by an _E_n_t_e_r or _n_e_w-_l_i_n_e
                                                        character.  If the ssssttttrrrriiiinnnngggg is  preceded  by  a  ^^^^  (caret
                                                        character), the matched line must begin with SSSSttttrrrriiiinnnngggg.  If
                                                        the SSSSttttrrrriiiinnnngggg parameter is omitted, then the  next  command
                                                        line  containing the most recent SSSSttttrrrriiiinnnngggg is accessed.  In
                                                        this case, a value of zero reverses the direction of the
                                                        search.
     ttttrrrraaaannnnssssppppoooosssseeee----cccchhhhaaaarrrrssss           Ctrl-T                   Transposes the current character with the next character
                                                        in  eeeemmmmaaaaccccssss  mode.  Transposes the two previous characters
                                                        in ggggmmmmaaaaccccssss mode.
     kkkkiiiillllllll----lllliiiinnnneeee                 Ctrl-U                   Deletes the entire input line.
     kkkkiiiillllllll----rrrreeeeggggiiiioooonnnn               Ctrl-W                   Kills from the cursor to the mark.
     pppprrrreeeeffffiiiixxxx----2222                  Ctrl-X                   Introduces a 2-character command sequence.
     ppppoooopppp----tttteeeexxxxtttt                  Ctrl-Y                   Restores the last item removed from  line.   (Yanks  the
                                                        item back to the line.)
     sssseeeeaaaarrrrcccchhhh----cccchhhhaaaarrrr----ffffoooorrrrwwwwaaaarrrrdddd       Ctrl-] _c                 Moves the cursor forward on  the  current  line  to  the
                                                        indicated character.
     sssseeeeaaaarrrrcccchhhh----cccchhhhaaaarrrr----bbbbaaaacccckkkkwwwwaaaarrrrdddd      _P_r_e_f_i_x-_1 Ctrl-] _c        Search backwards  in  the  current  line  for  the  next
                                                        keyboard  character.   Moves the cursor backwards on the
                                                        current line to the indicated character.
     qqqquuuuooootttteeee                     Ctrl-^                   Escapes the next character.  Editing characters  can  be
                               \                        entered  in  a  command  line  or  in a search string if
                                                        preceded by a _q_u_o_t_e command.   The  escape  removes  the
                                                        next character's editing features, if any.
     eeeeooootttt                       Ctrl-_                   Acts as an end-of-file.
     ccccoooommmmmmmmeeeennnntttt----eeeexxxxeeeeccccuuuutttteeee           _P_r_e_f_i_x-_1 #               Inserts a #### (pound sign) at the beginning  of  the  line
                                                        and  then execute the line.  This causes a comment to be
                                                        inserted in the history file.
     ccccoooommmmpppplllleeeetttteeee----lllliiiisssstttt             _P_r_e_f_i_x-_1 *               Attempts file name substitution on the current word.  An
                                                        asterisk  is appended if the word doesn't match any file
                                                        or contain any special pattern characters.
     pppprrrreeeevvvv----hhhhiiiisssstttt----wwwwoooorrrrdddd            _P_r_e_f_i_x-_1 .               Inserts on the  line  the  last  word  of  the  previous
     ccccooooppppyyyy----llllaaaasssstttt----aaaarrrrgggg             _P_r_e_f_i_x-_1 _               command.   If preceded by a numeric parameter, the value
                                                        of this parameter determines which word to insert rather





     Page 28                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                                                        than  the last word.  Note I/O redirections do not count
                                                        as words of the command.
     bbbbeeeeggggiiiinnnnnnnniiiinnnngggg----ooooffff----hhhhiiiissssttttoooorrrryyyy      _P_r_e_f_i_x-_1 <               Fetches the least recent (oldest) history line.
     lllliiiisssstttt                      _P_r_e_f_i_x-_1 =               Prints a sorted, columnated list of file names (if  any)
                                                        that  can  complete  the  partial  word  containing  the
                                                        cursor.  Directory names have //// post-pended to them, and
                                                        executable file names are followed by ****.
     eeeennnndddd----ooooffff----hhhhiiiissssttttoooorrrryyyy            _P_r_e_f_i_x-_1 >               Fetches the most recent (youngest) history line.
     bbbbaaaacccckkkkwwwwaaaarrrrdddd----wwwwoooorrrrdddd             _P_r_e_f_i_x-_1 B               Moves the cursor backward one word.
     ccccaaaappppiiiittttaaaalllliiiisssseeee----wwwwoooorrrrdddd           _P_r_e_f_i_x-_1 C               Capitalises the current word.
     ddddeeeelllleeeetttteeee----wwwwoooorrrrdddd----bbbbaaaacccckkkkwwwwaaaarrrrdddd      _P_r_e_f_i_x-_1 Ctrl-H          Deletes the previous word.
                               _P_r_e_f_i_x-_1 H
     ddddeeeelllleeeetttteeee----wwwwoooorrrrdddd----ffffoooorrrrwwwwaaaarrrrdddd       _P_r_e_f_i_x-_1 D               Deletes the current word.
     pppprrrreeeeffffiiiixxxx----1111                  ESC                      Introduces  a  2-character  command   sequence.    Three
                                                        introducers are available.
     ccccoooommmmpppplllleeeetttteeee                  _P_r_e_f_i_x-_1 ESC             File-name completion.  Replaces the  current  word  with
                                                        the  longest  common prefix of all file names that match
                                                        the current word with  an  asterisk  appended.   If  the
                                                        match  is unique, a //// (slash) is appended if the file is
                                                        a directory and a space is appended if the file is not a
                                                        directory.
     ffffoooorrrrwwwwaaaarrrrdddd----wwwwoooorrrrdddd              _P_r_e_f_i_x-_1 F               Moves  the  cursor  forward  one  word  (a   string   of
                                                        characters  consisting  of  only  letters,  digits,  and
                                                        underscores).
     ddddoooowwwwnnnnccccaaaasssseeee----wwwwoooorrrrdddd             _P_r_e_f_i_x-_1 L               Changes the current word to lowercase.
     mmmmuuuullllttttiiiippppllllyyyy                  _P_r_e_f_i_x-_1 M               Multiplies the parameter of the next command by 4.
     uuuuppppccccaaaasssseeee----wwwwoooorrrrdddd               _P_r_e_f_i_x-_1 U               Change the current word to upper-case.
                               _P_r_e_f_i_x-_1 DDDDiiiiggggiiiittttssss          Defines the numeric parameter.  The ddddiiiiggggiiiittttssss are taken  as
                                                        a  parameter  to  the  next  command.  The commands that
                                                        accept  a  parameter  are  _f_o_r_w_a_r_d-_c_h_a_r,  _b_a_c_k_w_a_r_d-_c_h_a_r,
                                                        _b_a_c_k_w_a_r_d-_w_o_r_d,     _f_o_r_w_a_r_d-_w_o_r_d,    _d_e_l_e_t_e-_w_o_r_d-_f_o_r_w_a_r_d,
                                                        _d_e_l_e_t_e-_c_h_a_r-_f_o_r_w_a_r_d, _d_e_l_e_t_e-_w_o_r_d-_b_a_c_k_w_a_r_d,  _d_e_l_e_t_e-_c_h_a_r-
                                                        _b_a_c_k_w_a_r_d,   _p_r_e_v-_h_i_s_t-_w_o_r_d,  _c_o_p_y-_l_a_s_t-_a_r_g,  _u_p-_h_i_s_t_o_r_y,
                                                        _d_o_w_n-_h_i_s_t_o_r_y,  _s_e_a_r_c_h-_h_i_s_t_o_r_y,  _u_p_c_a_s_e-_w_o_r_d,   _d_o_w_n_c_a_s_e-
                                                        _w_o_r_d,   _c_a_p_i_t_a_l_i_s_e-_w_o_r_d,   _u_p_c_a_s_e-_c_h_a_r,   _d_o_w_n_c_a_s_e-_c_h_a_r,
                                                        _c_a_p_i_t_a_l_i_s_e-_c_h_a_r,  _k_i_l_l-_t_o-_e_o_l,  _s_e_a_r_c_h-_c_h_a_r-_f_o_r_w_a_r_d  and
                                                        _s_e_a_r_c_h-_c_h_a_r-_b_a_c_k_w_a_r_d.
     ccccaaaappppiiiittttaaaalllliiiisssseeee----cccchhhhaaaarrrr           _P_r_e_f_i_x-_1 c               Capitalises the current character.
     ddddoooowwwwnnnnccccaaaasssseeee----cccchhhhaaaarrrr             _P_r_e_f_i_x-_1 l               Change the character under the cursor to lower case.
     ppppuuuusssshhhh----tttteeeexxxxtttt                 _P_r_e_f_i_x-_1 p               Pushes the region from the cursor to  the  mark  on  the
                                                        stack.
     sssseeeetttt----mmmmaaaarrrrkkkk                  _P_r_e_f_i_x-_1 space           Sets a mark.
     uuuuppppccccaaaasssseeee----cccchhhhaaaarrrr               _P_r_e_f_i_x-_1 u               Change the character under the cursor to upper case.
     yyyyaaaannnnkkkk----ppppoooopppp                  _P_r_e_f_i_x-_1 y               Immediately after a yyyyaaaannnnkkkk,  replaces  the  inserted  text
                                                        string with the next previous killed text string.
     eeeexxxxcccchhhhaaaannnnggggeeee----ppppooooiiiinnnntttt----aaaannnndddd----mmmmaaaarrrrkkkk   _P_r_e_f_i_x-_2 Ctrl-X          Interchanges the cursor and the mark.
     jjjjoooobbbbssss                      _P_r_e_f_i_x-_2 j               Print a list of the current jobs (OS/2 only).
     aaaauuuuttttoooo----iiiinnnnsssseeeerrrrtttt                                        Simply causes the character to appear as literal  input.
                                                        (Most ordinary characters are bound to this.)
     ddddeeeelllleeeetttteeee----cccchhhhaaaarrrr----ffffoooorrrrwwwwaaaarrrrdddd                                Deletes the character after the cursor.





     Page 29                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



     nnnnoooo----oooopppp                                              Does nothing.
     cccclllleeeeaaaarrrr----ssssccccrrrreeeeeeeennnn                                       Clear the screen and print the current line.
     rrrreeeesssseeeetttt                                              Reset input, clearing the current line and yank buffers.
                                                        Search the alias list for an alias named __L_e_t_t_e_r.  If an
                                                        alias  of this name is defined, its value is placed into
                                                        the input queue.
                               _P_r_e_f_i_x-_1 Ctrl-] LLLLeeeetttttttteeeerrrr   Search the alias list for an alias named __L_e_t_t_e_r.  If an
                               _P_r_e_f_i_x-_1 LLLLeeeetttttttteeeerrrr          alias  of this name is defined, its value is placed into
                                                        the input queue.  The LLLLeeeetttttttteeeerrrr parameter must not  specify
                                                        one of the escape functions.


        IIIInnnniiiittttiiiiaaaalllliiiissssaaaattttiiiioooonnnn FFFFiiiilllleeee
          When the shell is run in interactive mode, the Command  Line
          Editing  keys  and  other  user configuration parameters are
          read from the initialisation file _s_h._i_n_i.  This shell  looks
          for  this  file  in  the same directory as the sssshhhh executable
          which is running.  It does not  use  the  SSSSHHHHEEEELLLLLLLL  environment
          variable  or  search the directories in the PPPPAAAATTTTHHHH environment
          variable.  At present, there are two types of entry in  this
          file:  keyboard  configuration;  and  others.   The entry is
          contained in a single line and consists  of  a  keyword  (in
          upper  or lower case), white space, an equals symbols, white
          space and one or two numeric values (see _s_t_r_t_o_l(_3) for valid
          formats where _b_a_s_e parameter is zero), followed by an end of
          line character.

          For the keyboard entries, the numeric values give the MMMMSSSS----DDDDOOOOSSSS
          Function  8  (Console  Input without Echo) return values for
          that  entry.   Note  that  extended  codes  (function  keys)
          require  two calls to this function.  The first call returns
          zero and the second the extended code.  In the configuration
          file,  a  first  numeric  value of zero indicates a extended
          code and must be followed by a second value.  The shell also
          supports  the use of the AAAALLLLTTTT _k_e_y _i_n _c_o_m_b_i_n_a_t_i_o_n _w_i_t_h _a_n_o_t_h_e_r
          _k_e_y.  _I_n _t_h_i_s _c_a_s_e, _t_h_e  _f_i_r_s_t  _v_a_l_u_e  _c_o_n_t_a_i_n_s  0000xxxxffffffff,  that
          selects AAAALLLLTTTT key, and the second key contains the appropriate
          scan code for the key required.  The program sssshhhhoooowwwwkkkkeeeeyyyy can  be
          used to determine the scan codes required.

          A non-zero first numeric  value  must  not  be  followed  by
          anything else on the line.

          Other entries must only have  one  numeric  value.   A  zero
          value disables the function and a non-zero value enables the
          function.  At present, there are two other functions:

          BBBBeeeellllllll Enable/disable warning bells

          HHHHaaaallllffffHHHHeeeeiiiigggghhhhtttt
               Use full or halfheight block cursor to indicate  Insert
               mode



     Page 30                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          IIIInnnnsssseeeerrrrttttMMMMooooddddeeee
               Set the default insert mode on or off

          IIIInnnnsssseeeerrrrttttCCCCuuuurrrrssssoooorrrr
               Enable/disable the insert mode cursor.

          RRRRoooooooottttDDDDrrrriiiivvvveeee
               Determines  the  root  drive   from   which   to   read
               /_e_t_c/_p_r_o_f_i_l_e.

          EEEEOOOOFFFFKKKKeeeeyyyy
               Determines the End-of-File key.

          Invalid lines or lines beginning with a #### are ignored.

          The following table gives the list  of  valid  keywords  and
          their default values:

          _________________________________________________________________________
           Keyword            First numeric   Second numeric   Actual Key
          _________________________________________________________________________
           KEYBOARD ENTRIES
           ScanBackward       0               0x49             PAGE UP
           ScanForeward       0               0x51             PAGE DOWN
           Previous           0               0x48             UP ARROW
           Next               0               0x50             DOWN ARROW
           Left               0               0x4b             LEFT ARROW
           Right              0               0x4d             RIGHT ARROW
           WordRight          0               0x74             Control RIGHT ARROW
           WordLeft           0               0x73             Control LEFT ARROW
           Start              0               0x47             HOME
           Clear              0               0x76             Control PAGE DOWN
           Flush              0               0x75             Control END
           End                0               0x4f             END
           Insert             0               0x52             INSERT
           DeleteRight        0               0x53             DELETE
           DeleteLeft         0x08                             BACKSPACE
           Complete           0               0x77             Control HOME
           Directory          0               0x0f             Shift TAB
           ClearScreen        0               0x84             Control PAGE UP
           Jobs               0               0x68             ALT F1
           Transpose          0x14                             Control T
           Quote              0x11                             Control Q
          _________________________________________________________________________
           OTHER FUNCTIONS
           Bell               0
           HalfHeight         0
           InsertMode         0
           InsertCursor       1
           RootDrive          3
           EOFKey             0x1a
          _________________________________________________________________________



     Page 31                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))





        EEEExxxxeeeeccccuuuuttttiiiioooonnnn
          Each time a command is executed, the above substitutions are
          carried out.  If the command name matches one of the _S_p_e_c_i_a_l
          _C_o_m_m_a_n_d_s listed below, it is executed in the shell  process.
          If  the  command  name does not match a _S_p_e_c_i_a_l _C_o_m_m_a_n_d, but
          matches the name of a  defined  function,  the  function  is
          executed  in  the  shell process (note how this differs from
          the  execution  of  shell   procedures).    The   positional
          parameters  $$$$1111,  $$$$2222,  ....   are set to the arguments of the
          function.  If the command name  matches  neither  a  _S_p_e_c_i_a_l
          _C_o_m_m_a_n_d nor the name of a defined function, a new process is
          created and an attempt is made to execute  the  command  via
          _e_x_e_c(2).

          The shell parameter PPPPAAAATTTTHHHH defines the  search  path  for  the
          directory  containing  the  command.   Alternative directory
          names are separated by a semi-colon (;;;;).  The  default  path
          is  ....;;;;cccc::::////bbbbiiiinnnn;;;;cccc::::////uuuussssrrrr////bbbbiiiinnnn  (specifying  the current directory,
          cccc::::////bbbbiiiinnnn, and cccc::::////uuuussssrrrr////bbbbiiiinnnn,  in  that  order).   Note  that  the
          current  directory  is  specified by a null path name, which
          can appear immediately after the equal sign or  between  the
          semi-colon  delimiters  anywhere  else in the path list.  If
          the command name contains a //// or starts with xxxx:::: (where x  is
          a  drive  letter) the search path is not used; such commands
          will not be executed by the  restricted  shell.   Otherwise,
          each  directory  in  the  path is searched for an executable
          file.  Executable files are indicated  by  a  .exe  or  .com
          extension.   This extension is automatically supplied by the
          shell and not have to be entered by the user.

          If the file with a .com or .exe extension cannot be found in
          the  directory,  the file is opened and first 512 characters
          are read.  If there are no characters in the  block  with  a
          value  in  the  range  0  to  7, the file is assumed to be a
          script file containing shell commands.  Note that the  shell
          will  check  the  file and if that file does not exist or is
          not a script, it will try the file with an extension of  ....sssshhhh
          or  ....kkkksssshhhh.  If a ((((ggggiiiivvvveeeennnn bbbbyyyy tttthhhheeee eeeennnnvvvviiiirrrroooonnnnmmmmeeeennnntttt vvvvaaaarrrriiiiaaaabbbblllleeee SSSSHHHHEEEELLLLLLLL) is
          spawned to read it.

          If the script file starts with the a line  of  the  form  #!
          _i_n_t_e_r_p_r_e_t_e_r  [_a_r_g_u_m_e_n_t_s], the interpreter is invoked instead
          of the shell to process the script.  Optional arguments  can
          be  supplied  in the script file which are passed before the
          name of the script file.  Thus, if the file  _d_e_m_o  contained
          the following string as the first line

               #! perl -sP

          Entering _d_e_m_o _n_a_m_e would be equivalent to entering the  _p_e_r_l
          -_s_P  _n_a_m_e  at  the  command  prompt.   Note  that  no  other


     Page 32                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          processing of the first line other that the  separation  (by
          white  space)  into  arguments  is  done.   Note that if the
          iiiinnnntttteeeerrrrpppprrrreeeetttteeeerrrr is either /_b_i_n/_s_h or /_b_i_n/_k_s_h, the value of  the
          SSSSHHHHEEEELLLLLLLL environment variable is used to execute the script.

          If none of the above conditions for a  executable  file  are
          detected  and  a  file  with  a .bat extension exists in the
          directory,  the  command  processor  given  by  the  CCCCOOOOMMMMSSSSPPPPEEEECCCC
          environment  variable  is spawned to process the file.  This
          is normally the standard MMMMSSSS----DDDDOOOOSSSS _c_o_m_m_a_n_d._c_o_m or OOOOSSSS////2222  _c_m_d._e_x_e
          processor.

          A parenthesised command is also executed in a sub-shell.

          Under MS-DOS or OS/2, the shell looks at  the  type  of  the
          program  which  is  about  to  be  executed.  If it is an MS
          Windows program,  the  shell  will  automatically  start  MS
          Windows,  unless  it  is  already running.  If MS Windows is
          already running, the shell will not start the program.

        CCCCoooommmmmmmmaaaannnndddd LLLLiiiinnnneeee BBBBuuuuiiiillllddddiiiinnnngggg
          The file pointed to by the EEEEXXXXTTTTEEEENNNNDDDDEEEEDDDD____LLLLIIIINNNNEEEE parameter  contains
          information  which  instructs the shell on how to create the
          command line for a particular program from  the  information
          entered  to  the shell.  If the program name is not found in
          this file, the standard MMMMSSSS----DDDDOOOOSSSS or OOOOSSSS////2222 mechanisms  are  used
          with no special processing.

          The file is scanned prior to the execution  of  an  external
          command.   An  entry  in  this file is contained in a single
          line and consists of a  program  name  (in  upper  or  lower
          case),  white  space,  an equals symbol, white space and the
          program  type  followed  by  up  to  four  optional  values,
          followed  by  an end of line character.  The vvvvaaaalllluuuueeee tells the
          shell how to build the command line and the optional  values
          provide additional information.  The valid pppprrrrooooggggrrrraaaammmm ttttyyyyppppeeeessss are
          (note that invalid entries cause a line to be ignored) given
          below.   These  pppprrrrooooggggrrrraaaammmm ttttyyyyppppeeeessss must appear as the first value
          following the _e_q_u_a_l_s.   Otherwise,  they  are  ignored.   An
          empty  pppprrrrooooggggrrrraaaammmm ttttyyyyppppeeeessss may be empty to only select one or more
          of the optional values.

          Under OOOOSSSS////2222, by default the shell generates the command  line
          using   the   format  specified  by  Eberhard  Mattes's  EMX
          interface.  This is makes no difference to programs which do
          not support the interface.

               uuuunnnniiiixxxx This program can process the  command  line  using
                    the  indirect  command  file  character @@@@.  When a
                    program, which can process this  format,  finds  a
                    command  line  parameter  starting with a @@@@ in the
                    command line, it treats the rest of the  parameter



     Page 33                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    as  a  file  and reads the command line parameters
                    from that file (one per  line,  the  end  of  line
                    characters  can be escaped by preceding with a \\\\).
                    Examples  of  this   functionality   include   the
                    Standard LLLLiiiinnnnkkkkeeeerrrr and LLLLiiiibbbbrrrraaaarrrriiiiaaaannnn.

                    The file name is set up in UUUUNNNNIIIIXXXX format (using //// as
                    the directory separators).

                    This functionality allows the user  to  get  round
                    the  127 byte command line length limit of MMMMSSSS----DDDDOOOOSSSS.
                    A sample version of the code to process wild cards
                    and  indirect  command  files is included with the
                    source of the shell in the file _s_t_d_a_r_g_v._c.

               ddddoooossss  This program can process the  command  line  using
                    the  indirect  command file character @@@@.  The file
                    name is set up in DOS  format  (using  \\\\s  as  the
                    directory separators).

               eeeennnnvvvviiiirrrroooonnnn
                    The command line is passed to the external program
                    in the environment variable specified by the first
                    optional value.  The optional second  value  which
                    is   numeric,   gives   the   parameter  separator
                    character to be  used  (see  _s_t_r_t_o_l(_3)  for  valid
                    formats  where  _b_a_s_e  parameter is zero).  If this
                    second value is  missing  or  evaluates  to  zero,
                    space is used.

          The following optional values described below  may  be  used
          after either uuuunnnniiiixxxx or ddddoooossss or by themselves:

               sssswwwwiiiittttcccchhhh
                    The  optional  value  sssswwwwiiiittttcccchhhh  causes  the  program
                    parameters  to  be  converted  from UUUUNNNNIIIIXXXX format to
                    MMMMSSSS----DDDDOOOOSSSS  format.   This   means   that   parameters
                    beginning with an ---- have it converted to a ////.  For
                    all other parameters,  ////s  are  converted  to  \\\\s.
                    This option is not applied to quoted parameters or
                    escaped characters.

                    This functionality allows ease of entry of  MMMMSSSS----DDDDOOOOSSSS
                    commands  which expect MMMMSSSS----DDDDOOOOSSSS directory separators
                    which the shell interprets as the escape character
                    (not that the underlying MMMMSSSS----DDDDOOOOSSSS really cares).

               eeeexxxxppppoooorrrrtttt
                    The  optional  value  eeeexxxxppppoooorrrrtttt  causes  the   marked
                    environment  variables  to  be converted from UUUUNNNNIIIIXXXX
                    format to MMMMSSSS----DDDDOOOOSSSS format.  This  is  equivalent  to
                    setting the -_M flag for this program only.



     Page 34                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               nnnnooooeeeexxxxppppaaaannnndddd
                    The optional value  nnnnooooeeeexxxxppppaaaannnndddd  disables  file  name
                    generation  when  building  the command line (also
                    see sssseeeetttt command).

               nnnnoooosssswwwwaaaapppp
                    The optional value nnnnoooosssswwwwaaaapppp  disables  swapping  for
                    the  command.   This may speed up the execution of
                    small commands.

               nnnnooooqqqquuuuooootttteeee
                    The optional value nnnnooooqqqquuuuooootttteeee stops  the  shell  from
                    escaping  double quotes in the command line before
                    they are passed to  the  command.   Double  quotes
                    processed by some programs.

               iiiiggggnnnnoooorrrreeeettttyyyyppppeeee
                    The optional value  iiiiggggnnnnoooorrrreeeettttyyyyppppeeee  stops  the  MS-DOS
                    version  of  the  shell  deciding  not  to execute
                    _f_o_r_e_i_g_n (non MS-DOS) executables.  The headers  of
                    some  ._E_X_E  files record incorrectly the operating
                    system and type  of  program.   This  option  only
                    applies to the MS-DOS version of the shell.

               ppppiiiippppeeeettttttttyyyy
                    The optional value ppppiiiippppeeeettttttttyyyy causes the shell to set
                    up  the environment such that child shells created
                    by this program will treat Pipes  as  TTYs.   This
                    feature is mainly to support EMACS under OS/2, but
                    may prove useful to other programs in  a  somewhat
                    bizarre set of circumstances.  This feature is not
                    support under the MS-DOS version of the shell.

               qqqquuuuooootttteeeewwwwiiiilllldddd
                    The optional value qqqquuuuooootttteeeewwwwiiiilllldddd causes the  shell  to
                    quote  wild  cards  in  the  command  line  to the
                    program.  The default is not to quote wild cards.

        FFFFuuuunnnnccccttttiiiioooonnnnssss
          The ffffuuuunnnnccccttttiiiioooonnnn keyword,  described  in  the  CCCCoooommmmmmmmaaaannnnddddssss  section
          above,  is  used to define shell functions.  Shell functions
          are read in and stored internally.  Alias names are resolved
          when  the  function  is  read.   Functions are executed like
          commands with the arguments passed as positional parameters.
          (See EEEExxxxeeeeccccuuuuttttiiiioooonnnn above).

          Functions execute in the same  process  as  the  caller  and
          share  all  files  and  present  working  directory with the
          caller.  Traps caught by  the  caller  are  reset  to  their
          default  action  inside the function.  A trap condition that
          is not caught or ignored by the function causes the function
          to  terminate  and  the  condition  to  be  passed on to the



     Page 35                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          caller.  A trap set on EXIT inside a  function  is  executed
          after the function completes.

          Ordinarily, variables are shared between the calling program
          and the function.  However, the ttttyyyyppppeeeesssseeeetttt special command used
          within  a  function  defines  local  variables  whose  scope
          includes the current function and all functions it calls.

          The special command rrrreeeettttuuuurrrrnnnn is used to return  from  function
          calls.   Errors  within  functions  return  control  to  the
          caller.

          Function identifiers can be listed with the ffffuuuunnnnccccttttiiiioooonnnn special
          command.   The  text  of  functions  will  also  be  listed.
          Function  can  be  undefined  with  the  uuuunnnnffffuuuunnnnccccttttiiiioooonnnn  special
          command.

          Ordinarily, functions are unset when the  shell  executes  a
          shell  script.   Functions  that  need  to be defined across
          separate invocations of the shell should be  placed  in  the
          EEEENNNNVVVV file.

          The shell has an  enhancement  that  allows  it  to  process
          scripts,  etc.  by  recognising  their  file  eeeexxxxtttteeeennnnssssiiiioooonnnn (the
          character string following the last period).  If  the  shell
          recognises  the eeeexxxxtttteeeennnnssssiiiioooonnnn, it will invoke the function named
          after the eeeexxxxtttteeeennnnssssiiiioooonnnn, if it exists (for example:  the command
          _d_e_m_o._c  will invoke the function ._c).  The variable PPPPAAAATTTTHHHHEEEEXXXXTTTTSSSS
          contains the list of valid extensions (and must include  the
          default  extensions (._e_x_e, ._c_o_m, ._b_a_t or ._c_m_d, ._s_h, ._k_s_h and
          _n_o _e_x_t_e_n_s_i_o_n).  NNNNooootttteeee that functions cannot  be  set  up  for
          ._e_x_e or ._c_o_m.

          The  order  in  which  the  extensions  appear  in  PPPPAAAATTTTHHHHEEEEXXXXTTTTSSSS
          determines  the  order  in which the shell will search for a
          file with the appropriate extension.  If the shell  finds  a
          file  with  a  matched  extension and a function exists, the
          function is  invoked  with  parameter  0  set  to  the  full
          pathname  of  the  file.   The rest of the parameters to the
          function are set up as  for  normal  functions.   Beware  of
          invoking recursive functions.

        JJJJoooobbbbssss
          Under OOOOSSSS////2222, an interactive shell associates a _j_o_b with  each
          pipeline.   It keeps a table of current jobs, printed by the
          jjjjoooobbbbssss command, and assigns them small integer numbers.   When
          a  job  is started asynchronously with &&&&, the shell prints a
          line that looks like:

               [1] 1234

          indicating job number 1 was started asynchronously  and  had



     Page 36                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          one (top-level) process whose process ID was 1234.

          There are several ways to refer to jobs in the shell.  A job
          can  be  referred to by the process id of any process in the
          job or by one of the following:

               %_n_u_m_b_e_r
                    The job with the given number.

               %_s_t_r_i_n_g
                    Any job whose command line begins with string.

               %?_s_t_r_i_n_g
                    Any job whose command line contains string.

               %%   Current job.

               %+   Equivalent to %%.

               %-   Previous job.

          The shell learns when a process changes state.   It  informs
          the  user  when  a  job  terminates, but only just before it
          prints a prompt.

          If you try to leave the shell  while  jobs  are  running  or
          stopped, you are warned, _Y_o_u _h_a_v_e _r_u_n_n_i_n_g _j_o_b_s.  You may use
          the jjjjoooobbbbssss command to identify them.  If you  immediately  try
          to exit again, the shell will not warn you a second time.

        SSSSppppeeeecccciiiiaaaallll CCCCoooommmmmmmmaaaannnnddddssss
          Input/output redirection is permitted  for  these  commands.
          File descriptor 1 is the default output location.

          ::::    No effect; the command does nothing.  A zero exit  code
               is returned.

          _l_e_t_t_e_r::::
               Select the drive specified by _l_e_t_t_e_r.

          .... _f_i_l_e
               Read and execute commands from _f_i_l_e  and  return.   The
               search  path  specified  by  PPPPAAAATTTTHHHH  is  used to find the
               directory containing _f_i_l_e.

          aaaalllliiiiaaaassss [ ----tttt ] [ _n_a_m_e[=_v_a_l_u_e ] ... ]
               AAAAlllliiiiaaaassss with no arguments prints the list of  aliases  in
               the  form  _n_a_m_e=vvvvaaaalllluuuueeee  on standard output.  An alias is
               defined for each _n_a_m_e whose _v_a_l_u_e is given.  A trailing
               space  in  _v_a_l_u_e causes the next word to be checked for
               alias substitution.  The ----tttt flag is  used  to  set  and
               list  tracked aliases.  The _v_a_l_u_e of a tracked alias is



     Page 37                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               the full pathname corresponding to the given name.  The
               _v_a_l_u_e becomes undefined when the _v_a_l_u_e of PATH is reset
               but the aliases remained tracked.  Without the ----tttt flag,
               for  each  _n_a_m_e in the argument list for which no _v_a_l_u_e
               is given, the _n_a_m_e and _v_a_l_u_e of the alias  is  printed.
               Alias  returns zero unless a _n_a_m_e is given for which no
               alias has been defined.

          bbbbiiiinnnndddd -m [ _s_t_r_i_n_g ] = [ _e_d_i_t_i_n_g-_c_o_m_m_a_n_d ]
               BBBBiiiinnnndddd with no arguments prints the  list  of  EMACS  key
               bindings  in  the  form  _n_a_m_e=vvvvaaaalllluuuueeee on standard output.
               The specified _e_d_i_t_i_n_g _c_o_m_m_a_n_d is  bound  to  the  given
               _s_t_r_i_n_g,  which  should  consist  of a control character
               (which may be written  using  ``caret  notation''  ^^^^_x),
               optionally   preceded   by   one   of  the  two  prefix
               characters.  Future input of the _s_t_r_i_n_g will cause  the
               _e_d_i_t_i_n_g  _c_o_m_m_a_n_d  to  be  immediately  invoked.   Three
               prefix characters (normal ESC and  ^X)  are  supported.
               If  the -_m flag is supplied, the specified input _s_t_r_i_n_g
               will afterwards be immediately replaced  by  the  given
               _e_d_i_t_i_n_g-_c_o_m_m_a_n_d   string,  which  may  contain  _e_d_i_t_i_n_g
               _c_o_m_m_a_n_d_s.

          bbbbrrrreeeeaaaakkkk [ _n ]
               Exit from the enclosing ffffoooorrrr or wwwwhhhhiiiilllleeee loop, if any.   If
               _n is specified, break _n levels.

          bbbbuuuuiiiillllttttiiiinnnn [ _a_r_g_s ... ]
               Force  the  selection  of  the  bbbbuuuuiiiillllttttiiiinnnn  version  of  a
               command.   The  builtin  shell  command selected by the
               first  _a_r_g_s  value  is  executed  with  the  parameters
               defined  by  the  remaining _a_r_g_ss.  If no arguments are
               given, a list of all _b_u_i_l_t_i_n commands is printed.

               If the first argument is  one  of  the  following,  the
               processing  of  the  builtin  command  in the following
               arguments are changed as indicated:

               ----aaaa   Set the following builtin commands to use  builtin
                    version  in preference to any function or external
                    versions.

               ----dddd   Set the following  builtin  commands  to  use  the
                    function  or external version in preference to the
                    builtin version.

               ----ssss   Display  the  current  status  of  the   following
                    builtin commands.

          ccccoooonnnnttttiiiinnnnuuuueeee [ _n ]
               Resume the next iteration of the enclosing ffffoooorrrr or wwwwhhhhiiiilllleeee
               loop.   If _n is specified, resume at the _n-th enclosing



     Page 38                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               loop.

          ccccdddd [ ----LLLLPPPP ] [ _a_r_g ]
          ccccdddd _s_e_a_r_c_h _r_e_p_l_a_c_e
               This command can be in either of  two  forms.   In  the
               first  form  it  changes  the current directory to _a_r_g.
               The shell parameter HHHHOOOOMMMMEEEE is the default _a_r_g.  The shell
               parameter  CCCCDDDDPPPPAAAATTTTHHHH  defines  the  search  path  for  the
               directory containing _a_r_g.  Alternative directory  names
               are separated by a semi-colon (;;;;).  The default path is
               <<<<nnnnuuuullllllll>>>> (specifying the current directory).   Note  that
               the current directory is specified by a null path name,
               which can appear immediately after the  equal  sign  or
               between  the semi-colon delimiters anywhere else in the
               path list.  If _a_r_g begins with a //// or xxxx:::: (where x is  a
               drive letter), the search path is not used.  Otherwise,
               each directory in the path is searched for _a_r_g.  The _c_d
               command may not be executed by _r_s_h.

               The -_L option (default) preserves logical  naming  when
               treating  substituted  drives (see SSSSUUUUBBBBSSSSTTTT((((1111))))).  ccccdddd ----LLLL ........
               moves the current directory one path  component  closer
               to  the  root  directory.   The ----PPPP option preserves the
               physical path when treating substituted drives.  ccccdddd  ----PPPP
               ........   changes   the  working  directory  to  the  parent
               directory of the current directory.  These options  are
               only available under the MS-DOS 16 bit version.

               In the second form, ccccdddd substitutes the  string  _r_e_p_l_a_c_e
               for  the  string  _s_e_a_r_c_h in the current directory name,
               PPPPWWWWDDDD and tries to change to this new directory.

               Note that the name cccchhhhddddiiiirrrr is an builtin alternative name
               for  ccccdddd, allowing the user to set up aliases for ccccdddd and
               still   have   access   to   the    change    directory
               functionality.

          ddddeeeettttaaaacccchhhh _p_r_o_g_r_a_m [ _a_r_g_s ]
               This command  (which  is  only  available  under  OOOOSSSS////2222)
               starts and simultaneously detaches an OOOOSSSS////2222 _p_r_o_g_r_a_m from
               the shell.  Any _p_r_o_g_r_a_m that  is  started  with  ddddeeeettttaaaacccchhhh
               command  must  be able to process independently outside
               the control of the shell.  Builtin shell  commands  and
               functions cannot be detached.

          eeeecccchhhhoooo [ _a_r_g ... ]
               Echo arguments. EEEEcccchhhhoooo writes its arguments separated  by
               blanks  and  terminated  by  a new-line on the standard
               output.  It also understands C-like escape conventions;
               beware of conflicts with the shell's use of \\\\:

               \\\\bbbb   backspace



     Page 39                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               \\\\cccc   print line without new-line
               \\\\ffff   form-feed
               \\\\nnnn   new-line
               \\\\rrrr   carriage return
               \\\\tttt   tab
               \\\\vvvv   vertical tab
               \\\\\\\\   backslash
               \\\\_n   the 8-bit character whose ASCII code is the 1-, 2-
                    or 3-digit octal number _n, which must start with a
                    zero.

                    _E_c_h_o  is  useful  for  producing  diagnostics   in
                    command  files  and  for sending known data into a
                    pipe.

          eeeevvvvaaaallll [ _a_r_g ... ]
               The arguments are read as input to the  shell  and  the
               resulting command(s) executed.

          eeeexxxxeeeecccc [ _a_r_g ... ]
               The command specified by the arguments is  executed  in
               place  of  this  shell  without creating a new process.
               Input/output arguments may  appear  and,  if  no  other
               arguments are given, cause the shell input/output to be
               modified.

          eeeexxxxiiiitttt [ _n ]
               Causes a shell to exit with the exit  status  specified
               by  _n.   If _n is omitted the exit status is that of the
               last command executed (an end-of-file will  also  cause
               the shell to exit.)

          eeeexxxxppppoooorrrrtttt [ _n_a_m_e[=_v_a_l_u_e] ... ]
               The given _n_a_m_es are marked for automatic export to  the
               _e_n_v_i_r_o_n_m_e_n_t  of  subsequently-executed commands.  If no
               arguments are given, a  list  of  all  names  that  are
               exported  in this shell is printed.  Function names may
               _n_o_t be exported.

          ffffaaaallllsssseeee
               No effect; the command does nothing.  A  non-zero  exit
               code is returned.

          ffffcccc [ ----eeee _E_d_i_t_o_r_N_a_m_e ] [ ----nnnnllllrrrr ] [ _F_i_r_s_t [ _L_a_s_t ] ]
          ffffcccc ----eeee ---- [ _O_l_d=_N_e_w ] [ _C_o_m_m_a_n_d ]
               In the first form, a range of commands  from  _F_i_r_s_t  to
               _L_a_s_t  is  selected from the last 100 commands that were
               typed at the terminal.  The _F_i_r_s_t and  _L_a_s_t  parameters
               can  be specified as a number or as a string.  A string
               locates the most recent command starting with the given
               string.   A negative number is used as an offset to the
               current command number.  If _L_a_s_t is not specified, then



     Page 40                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               it  is  set  to  _F_i_r_s_t.  If _F_i_r_s_t is not specified, the
               default is the previous command for editing and -16 for
               listing.

               ----llll   Lists the commands to standard output.

               ----rrrr   Reverses the order of the commands in the list.

               ----nnnn   Suppresses command numbers when listing.

               If the ----llll flag is not  specified,  the  editor  program
               specified by _E_d_i_t_o_r_N_a_m_e is invoked on a file containing
               these  key-board  commands.   If  _E_d_i_t_o_r_N_a_m_e   is   not
               supplied,  then  the  value  of the FFFFCCCCEEEEDDDDIIIITTTT parameter is
               used as the editor.   When  editing  is  complete,  the
               edited command(s) is executed.

               In the second form, the specified  _c_o_m_m_a_n_d  is  carried
               out again after the _O_l_d=_N_e_w substitution is performed.

          ffffuuuunnnnccccttttiiiioooonnnnssss [ _n_a_m_e ... ]
               The functions  given  by  _n_a_m_es  are  printed.   If  no
               arguments are given, a all the functions are displayed.

          ggggeeeettttooooppppttttssss _o_p_t_s_t_r_i_n_g _n_a_m_e [ _a_r_g ... ]
               Checks _a_r_g for legal options.  If _a_r_g is  omitted,  the
               positional  parameters  are  used.   An option argument
               begins with a ++++ or a ----.  An option not beginning with ++++
               or  ----  or  the argument -------- ends the options.  _o_p_t_s_t_r_i_n_g
               contains the letters that  ggggeeeettttooooppppttttssss  recognises.   If  a
               letter  is  followed by a ::::, that option is expected to
               have an argument.  The options can  be  separated  from
               the argument by blanks.

               ggggeeeettttooooppppttttssss places the next option letter it  finds  inside
               variable  _n_a_m_e  eeeeaaaacccchhhh  ttttiiiimmmmeeee  iiiitttt  iiiissss  iiiinnnnvvvvooookkkkeeeedddd,,,,  wwwwiiiitttthhhh  aaaa ++++
               prepended when _a_r_g begins with a ++++.  The index  of  the
               next  arg is stored in OOOOPPPPTTTTIIIINNNNDDDD.  The option argument, if
               any, gets stored in OOOOPPPPTTTTAAAARRRRGGGG,

               A leading :::: in _o_p_t_s_t_r_i_n_g causes ggggeeeettttooooppppttttssss  to  store  the
               letter  of an invalid option in OOOOPPPPTTTTAAAARRRRGGGG, and to set _n_a_m_e
               to ???? for an unknown option and to  ::::  when  a  required
               option  is missing.  Otherwise, ggggeeeettttooooppppttttssss prints an error
               message.  The exit status is non-zero when there are no
               more options.

          hhhhiiiissssttttoooorrrryyyy [ ----ddddeeeeiiiillllssss ]
               The hhhhiiiissssttttoooorrrryyyy command, with no arguments, will print  all
               the  commands  that  are currently saved in the shell's
               history buffers.  As new  commands  are  executed,  and
               space  in  the  buffers  runs out, old commands will be



     Page 41                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               deleted.  The hhhhiiiissssttttoooorrrryyyy commands prints  out  the  stored
               commands  with  sequence  numbers.   Negative  numbered
               commands, through command  number  zero,  are  commands
               that  were  retrieved  from  the  saved  history  file.
               Commands  starting  at  one  were  entered  during  the
               current  login  session.   If  a saved command contains
               embedded newlines, these will be  printed  out  as  the
               sequence  \\\\nnnn,  so  that  individual command stay on one
               line.

               The arguments  changes  the  way  the  shell  processes
               history information as follows:

               ----dddd   Disable the saving  of  commands  in  the  history
                    file.

               ----eeee   Enable the saving of commands in the history file.

               ----iiii   Initialise the history file.

               ----llll   Load the  history  from  the  file  given  by  the
                    HHHHIIIISSSSTTTTFFFFIIIILLLLEEEE environment variable.

               ----ssss   Save the history to the file given by the HHHHIIIISSSSTTTTFFFFIIIILLLLEEEE
                    environment variable.

          jjjjoooobbbbssss [ ----llllpppp | [ ----PPPP _j_o_b ] ]
               This command (which is only available under OOOOSSSS////2222) lists
               the  active jobs; or all active jobs if job is omitted.
               The ----llll options lists process id's in  addition  to  the
               normal  information.   The  ----pppp flag lists all the child
               processes  of  the  current  shell,  displaying   their
               process  ID  and  thread count.  The ----PPPP iiiidddd option lists
               all the child processes of  the  specified  process  or
               job.  See JJJJoooobbbbssss for a description of the format of job.

          kkkkiiiillllllll [ ----ssssiiiigggg ] [ _p_r_o_c_e_s_s | %%%%_j_o_b_i_d ] ...
               This command (which is only available under OOOOSSSS////2222) sends
               either  the  TTTTEEEERRRRMMMM  (terminate)  signal or the specified
               signal to the specified _p_r_o_c_e_s_s_e_s.  Signals  are  given
               by name, which are listed by ''''kkkkiiiillllllll ----llll''''.  If the _p_r_o_c_e_s_s
               number begins with a %%%%, the signal is sent to  the  job
               referenced.   See  JJJJoooobbbbssss for a description of the format
               of a _j_o_b.

          lllleeeetttt [ _a_r_g ... ]
               Each _a_r_g is an arithmetic expression to  be  evaluated.
               All calculations are done as long integers and no check
               for overflow is performed.  See  AAAArrrriiiitttthhhhmmmmeeeettttiiiicccc  EEEEvvvvaaaalllluuuuaaaattttiiiioooonnnn
               above for a description of arithmetic expressions..

               The  return  code  is  0  if  the  value  of  the  last



     Page 42                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               expression is non-zero, and 1 otherwise.

          mmmmssssddddoooossss [ _n_a_m_e[=_v_a_l_u_e] ... ]
               The given _n_a_m_es are marked _m_s_d_o_s format and if  the  ----MMMM
               flag is set, the values of the these _n_a_m_es are exported
               to child  processes  with  any  slashes  in  the  value
               replaced  by  \\\\s.  If no arguments are given, a list of
               all _m_s_d_o_s names is printed.

          pppprrrriiiinnnntttt [ ----RRRRnnnnpppprrrrssss ] [ ----uuuu uuuunnnniiiitttt ] [ _a_r_g_s ... ]
               The shell output mechanism.  With no flags or with flag
               -  or  --  the  _a_r_g_s  are printed on standard output as
               described by the eeeecccchhhhoooo command.

               ----RRRR   Prints in  the  raw  mode,  in  which  the  escape
                    conventions  of the eeeecccchhhhoooo command are ignored.  The
                    -_R option prints all subsequent _a_r_g_s  and  options
                    other than -_n.

               ----nnnn   Prevents  a  new-line  from  being  added  to  the
                    output.

               ----pppp   ----pppp  flag  has  not  effect  and  is  defined   for
                    compatibility.

               ----rrrr   Prints in  the  raw  mode,  in  which  the  escape
                    conventions of the eeeecccchhhhoooo command are ignored.

               ----ssss   Writes the _a_r_g_s to the history file instead of  to
                    standard output.

               ----uuuu uuuunnnniiiitttt
                    Specifies a one digit file descriptor uuuunnnniiiitttt  number
                    on which the output is placed.  The default is 1.

          ppppwwwwdddd [ ----LLLLPPPP ] [ _d_r_i_v_e ... ]
               Print the  current  working  directory.   If  _d_r_i_v_e  is
               present,  the  current working directory on each of the
               drives is printed.  _d_r_i_v_e contains a  string  of  drive
               letters, no colons are required.

               The -_L option (default) preserves the  logical  meaning
               of  the current directory and -_P preserves the physical
               meaning  of  the  current  directory  if  it  is  on  a
               substituted  drive  (see ccccdddd and SSSSUUUUBBBBSSSSTTTT((((1111))))).  This option
               is only available under the MS-DOS 16bit version.

          rrrreeeeaaaadddd [ ----pppprrrrssss ] [ ----uuuu uuuunnnniiiitttt ] [ _n_a_m_e?_p_r_o_m_p_t ] [ _n_a_m_e ... ]
               The shell input mechanism.  One line  is  read  and  is
               broken  up  into  words  using the characters in IIIIFFFFSSSS as
               separators.  In raw mode, ----rrrr, a \\\\ at the end of a  line
               does  not signify line continuation.  The first word is



     Page 43                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               assigned to the first _n_a_m_e,  the  second  word  to  the
               second  _n_a_m_e, etc., with leftover words assigned to the
               last _n_a_m_e.  If the ----ssss flag is present, the  input  will
               be saved as a command in the history file.  The ----pppp flag
               has not effect and is defined for  compatibility.   The
               flag  ----uuuu  can  be  used  to  specify  a  one digit file
               descriptor uuuunnnniiiitttt to read from.  The file descriptor  can
               be  opened  with the eeeexxxxeeeecccc special command.  The default
               value of uuuunnnniiiitttt is 0.  If _n_a_m_e is omitted then  RRRREEEEPPPPLLLLYYYY  is
               used  as  the  default  name.   If  the  first argument
               contains a ????, the remainder of this word is used  as  a
               prompt  when  the  shell  is interactive.  If the given
               file descriptor is open for writing and is  a  terminal
               device   then  the  prompt  is  placed  on  this  unit.
               Otherwise the prompt is issued on  file  descriptor  2.
               The   return   code  is  0  unless  an  end-of-file  is
               encountered.

          rrrreeeeaaaaddddoooonnnnllllyyyy [ _n_a_m_e[=_v_a_l_u_e] ... ]
               The given _n_a_m_es are marked _r_e_a_d_o_n_l_y and the  values  of
               the  these  _n_a_m_es  may  not  be  changed  by subsequent
               assignment.  If no arguments are given, a list  of  all
               _r_e_a_d_o_n_l_y names is printed.

          rrrreeeettttuuuurrrrnnnn [ _n ]
               Causes  a  function  to  exit  with  the  return  value
               specified  by _n.  If _n is omitted, the return status is
               that of the last command executed.

          sssseeeetttt [ [----||||++++]aaaaeeeeffffkkkkmmmmnnnnttttuuuuvvvvxxxx ] [ ----oooo ooooppppttttiiiioooonnnn ] [ _a_r_g ... ]

               ----aaaa   Mark variables which are modified or  created  for
                    export.

               ----eeee   Exit immediately if a command exits  with  a  non-
                    zero exit status.

               ----ffff   Disable file name generation

               ----hhhh   Each command becomes a tracked  alias  when  first
                    encountered.

               ----kkkk   All  keyword   arguments   are   placed   in   the
                    environment  for  a  command,  not just those that
                    precede the command name.

               ----mmmm   Background jobs will run  in  a  separate  process
                    group  and a line will print upon completion.  The
                    exit status of background jobs is  reported  in  a
                    completion  message.  This  only  applies to OOOOSSSS////2222.
                    The programs are detached from the current process
                    group.



     Page 44                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               ----nnnn   Read commands but do not execute them.

               ----oooo ooooppppttttiiiioooonnnn
                    The argument that follows this option can  be  one
                    of the following option names:

                    aaaalllllllleeeexxxxppppoooorrrrtttt
                         Same as ----aaaa....

                    bbbbeeeellllllll Enable alarm bell on errors

                    bbbbrrrreeeeaaaakkkk
                         Enable  the  extended  SIGINT  checking  (see
                         BBBBRRRREEEEAAAAKKKK  [ OOOONNNN |||| OOOOFFFFFFFF ] under _C_O_M_M_A_N_D._C_O_M).  This
                         option is only available under MMMMSSSS----DDDDOOOOSSSS.

                    eeeemmmmaaaaccccssss
                         Select emacs-like command line editing mode.

                    eeeerrrrrrrreeeexxxxiiiitttt
                         Same as ----eeee....

                    ggggmmmmaaaaccccssss
                         Select gmacs-like command line editing mode.

                    hhhhaaaallllffffhhhheeeeiiiigggghhhhtttt
                         Set cursor to halfheight when in insert mode.
                         If off, a full height cursor is used.

                    iiiiggggnnnnoooorrrreeeeccccaaaasssseeee
                         Under OOOOSSSS////2222, on non-FAT  (ie  case  retentive)
                         file systems, the shell will match file names
                         ignoring case.   Normally,  the  matches  are
                         case sensitive even though the file system is
                         only case retentive.

                    iiiiggggnnnnoooorrrreeeeeeeeooooffff
                         The shell will not exit on end-of-file.   The
                         command exit must be used.

                    iiiinnnnsssseeeerrrrttttmmmmooooddddeeee
                         Set the default edit mode  to  insert  rather
                         than overwrite.

                    kkkkeeeeyyyywwwwoooorrrrdddd
                         Same as ----kkkk....

                    mmmmaaaarrrrkkkkddddiiiirrrrssss
                         Appends a / (slash) to  all  directory  names
                         that  are a result of file name substitution.
                         mmmmssssddddoooossss Same as ----MMMM....




     Page 45                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    nnnnoooocccclllloooobbbbbbbbeeeerrrr
                         Prevents  redirection   >>>>   from   truncating
                         existing  files.   A vertical bar must follow
                         the redirection symbol  ((((>>>>||||))))  to  truncate  a
                         file when this option is turned on.

                    nnnnooooeeeexxxxeeeecccc
                         Same as ----nnnn....

                    nnnnoooogggglllloooobbbb
                         Same as ----ffff....

                    nnnnoooouuuunnnnsssseeeetttt
                         Same as ----uuuu....

                    oooossss2222  Tells the shell that the underlying operating
                         system is OS/2.

                    pppprrrriiiivvvviiiilllleeeeggggeeeedddd
                         Same as ----pppp....

                    rrrreeeeaaaallllppppiiiippppeeeessss
                         Under OOOOSSSS////2222, the shell will use OOOOSSSS////2222 pipes and
                         not temporary files to handle pipelines.  See
                         LLLLIIIIMMMMIIIITTTTAAAATTTTIIIIOOOONNNNSSSS.

                    ttttrrrraaaacccckkkkaaaallllllll
                         Same as ----hhhh....

                    vvvveeeerrrrbbbboooosssseeee
                         Same as ----vvvv....

                    vvvveeeerrrriiiiffffyyyy
                         Same as ----VVVV....

                    vvvviiii   Select vi-like command line editing mode.

                    wwwwiiiinnnnnnnntttt
                         Tells the shell that the underlying operating
                         system is MS Windows NT.

                    xxxxttttrrrraaaacccceeee
                         Same as ----xxxx....

               ----pppp   Not supported.

               ----tttt   Exit after reading and executing one command.

               ----uuuu   Treat   unset   variables   as   an   error   when
                    substituting.

               ----vvvv   Print shell input lines as they are read.



     Page 46                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               ----wwww   Disable shell warning messages.

               ----xxxx   Print commands and their  arguments  as  they  are
                    executed.

               ----MMMM   For those variables marked as mmmmssssddddoooossss variables, the
                    values  are  exported  to child processes with the
                    slashes replaced by \\\\s.  Most MMMMSSSS----DDDDOOOOSSSS utilities  do
                    not care if a file name contains a slash or \\\\ as a
                    directory  separator.   However,  some  like   the
                    _l_i_n_k_e_r   require  \\\\s  in  the  value  of  the  LLLLIIIIBBBB
                    variable.

               ----VVVV   Enable the File write verification option  in  the
                    operation  system  (see  VVVVEEEERRRRIIIIFFFFYYYY [ OOOONNNN |||| OOOOFFFFFFFF ] under
                    _C_O_M_M_A_N_D._C_O_M or _C_M_D._E_X_E).

               --------   Do not change any of the flags; useful in  setting
                    $$$$1111 to ----.

                    Using ++++ rather than ---- causes  these  flags  to  be
                    turned  off.   These  flags  can also be used upon
                    invocation of the shell.  The current set of flags
                    may  be  found in $$$$----.  The remaining arguments are
                    positional parameters and are assigned, in  order,
                    to  $$$$1111,  $$$$2222,  ....   If no arguments are given the
                    values of all names are printed.

          sssshhhhiiiifffftttt [ _n ]
               The positional parameters from $$$$nnnn++++1111 ...  are renamed $$$$1111
               ....  If _n is not given, it is assumed to be 1.

     _s_t_r_i_n_g ] [ ----XXXX _d_i_r_e_c_t_o_r_y ] [ _a_r_g_s.. ]
          ssssttttaaaarrrrtttt [ ----ddddffffWWWWPPPPFFFFiiiibbbbCCCCIIIISSSSxxxxhhhhHHHH ] [ ----cccc [ vilsna ]]  [  ----
               tttt  _t_i_t_l_e  ]  [  ----eeee
     _t_i_t_l_e ] [ ----eeee _s_t_r_i_n_g ]
          ssssttttaaaarrrrtttt ----OOOO [ dos | pm ] [ ----hhhhHHHHffffWWWWPPPPFFFFxxxxiiiibbbbIIIIDDDD ] [ ----
               cccc  [  _v_i_l_s_n_a  ]]  [  ----tttt
          ssssttttaaaarrrrtttt ----AAAA _s_e_s_s_i_o_n_I_d
               This command (which is only available under  OOOOSSSS////2222)  has
               three  forms.  The first form starts an OOOOSSSS////2222 (or MMMMSSSS----DDDDOOOOSSSS
               under OOOOSSSS////2222 2.x)  _p_r_o_g_r_a_m  in  a  new  session.   If  no
               _p_r_o_g_r_a_m and _a_r_g_u_m_e_n_t_s parameters are entered, the shell
               is started unless the -C option has been used to select
               the     OOOOSSSS////2222     command     processor.     Also    see
               DDDDoooossssSSSSttttaaaarrrrttttSSSSeeeessssssssiiiioooonnnn((((2222)))).

               The second form allows you to display and/or modify the
               default  parameters used to DDDDoooossssSSSSttttaaaarrrrttttSSSSeeeessssssssiiiioooonnnn((((2222)))) when the
               shell automatically starts a new session (ie  when  you
               attempt  to  run  an  OOOOSSSS////2222  PPPPMMMM  or  MMMMSSSS----DDDDOOOOSSSS program).  A
               different set of parameters are used depending  on  the



     Page 47                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               program  type and you can modify either the OOOOSSSS////2222 PPPPMMMM via
               ----OOOO ppppmmmm, or MMMMSSSS----DDDDOOOOSSSS via ----OOOO ddddoooossss parameters.   To  use  this
               form,  the  ----OOOO  switch  mmmmuuuusssstttt be the first option on the
               command line.

               The  third  form  allows  you  to  select  the  session
               _s_e_s_s_i_o_n_I_D.

               The arguments changes the  way  the  shell  starts  the
               session as follows:
               ----dddd   Normally, command  are  started  by  invoking  the
                    shell in the new session.  This option invokes the
                    command directly.
               ----SSSS   Invoke the shell to started the command in the new
                    session.
               ----ffff   The program becomes  the  foreground  session.  If
                    this  parameter  is  not  specified,  the  program
                    becomes a background session.
               ----bbbb   The program becomes the background session.
               ----iiii   The  new  session  will   inherit   the   original
                    environment  of  the  shell instead of the current
                    environment.
               ----IIII   The new session will independent  of  the  current
                    process.  Normally, the session is a child session
                    of the current process.  Independent sessions  are
                    not   terminated   when   the   shell  terminates.
                    Starting  a  child  session  prevents  any   child
                    session   or   process   from  also  starting  new
                    sessions.
               ----xxxx   The new  session  will  a  child  session  of  the
                    current process.
               ----tttt ttttiiiittttlllleeee
                    Sets the _t_i_t_l_e of the new session.
               ----FFFF   This application is a full-screen application that
                    must  run  in  a  separate  session independent of
                    Presentation Manager.
               ----WWWW   This is an OOOOSSSS////2222 application  that  runs  within  a
                    Presentation Manager window.
               ----PPPP   This application  is  started  as  a  Presentation
                    Manager application.
               ----CCCC   Use the OOOOSSSS////2222  command  processor  instead  of  the
                    shell.
               ----eeee ssssttttrrrriiiinnnngggg
                    This option can be  used  multiple  times  on  the
                    command  line  and  allows  the user to explicitly
                    specify the environment to be passed  to  the  new
                    process.   When  this  option  is used, only those
                    environment variables set up by the ----eeee options are
                    set  in  the  new session's environment.  Only one
                    environment  variable  can  be  assigned  per   ----eeee
                    switch.   The  ssssttttrrrriiiinnnnggggs are in standard environment
                    format (_n_a_m_e=_v_a_l_u_e).  This may of  particular  use



     Page 48                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    under OOOOSSSS////2222 2.x when starting MMMMSSSS----DDDDOOOOSSSS programs.
               ----cccc [ _v_i_l_s_n_a ]
                    This option allows the user to configure the  size
                    of  the  window  created  for the new session: _v -
                    visible;  _i  -  invisible;  _l  -  maximise;  _s   -
                    minimise;  _n  -  no  autoclose;  or _a - autoclose.
                    Multiple selections can be  made  on  one  option.
                    Any  selection  removes any inappropriate previous
                    selections  (ie.  _m_a_x_i_m_i_s_e  removes  any  previous
                    selected  _m_i_n_i_m_i_s_e).   Multiple ----cccc options are not
                    cumulative and only take the  values  selected  by
                    the   last  ----cccc  option.   The  default  is  window
                    configuration is _n_o _a_u_t_o_c_l_o_s_e.
               ----AAAA sssseeeessssssssiiiioooonnnnIIIIdddd
                    This option cannot be used with any  other  option
                    and  allows the user to switch to another session,
                    given by _s_e_s_s_i_o_n_I_D, which must be a child  session
                    of the current session.
               ----XXXX _d_i_r_e_c_t_o_r_y
                    This option allows the user to select the  startup
                    _d_i_r_e_c_t_o_r_y  if  the  command is to started in a new
                    session via the shell.
               ----hhhh   The  new  session   will   inherit   the   current
                    environment    of    the   shell   process   (file
                    descriptors, directory, etc).
               ----HHHH   The new session will inherit the  current  session
                    had when it started.
               ----DDDD   Display the start up parameters for PPPPMMMM  or  MMMMSSSS----DDDDOOOOSSSS
                    sessions.
               ----OOOO [ dos | pm ]
                    Select  the  session  parameters  to  display   or
                    modify.
               ----DDDD   Display the start up parameters for PPPPMMMM  or  MMMMSSSS----DDDDOOOOSSSS
                    sessions.
          sssswwwwaaaapppp [ _o_p_t_i_o_n_s ]
               This command (which is only  available  on  the  16-bit
               MS-DOS  version)  defines  how  the  shell  will handle
               swapping  itself  to  reduce  its  memory  requirements
               whilst other programs execute.  The options are
               ooooffffffff  Disable swapping.  The  shell  remains  in  memory
                    whilst  the  child  is  running  and  reduces  the
                    available memory by about 200K (depending  on  the
                    size of the environment and history).
               oooonnnn   Enable all devices.  The shell will  swap  out  to
                    either  expanded  or  extended  memory or to disk,
                    execute the command and then swap back in.  Whilst
                    swapped, the shell reduces the available memory by
                    about 3K.
               eeeexxxxppppaaaannnndddd
                    Enable  swapping  to  Expanded  Memory.   The  EMS
                    driver must exist on your system for this to work.
               eeeexxxxtttteeeennnndddd [ _s_t_a_r_t _a_d_d_r_e_s_s ]



     Page 49                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    Enable swapping to Extended Memory.  If  you  have
                    an  XMS  driver on your system, the shell will use
                    the XMS driver.  Otherwise, the BIOS Interrupt  15
                    interface  is  used.   The  optional start address
                    defines the based address in the  Extended  Memory
                    at which point the shell writes its swap area when
                    the BIOS interface is used.  The default  location
                    is _0_x_1_0_0_0_0_0.
               ddddiiiisssskkkk Enable swapping to  disk.   The  shell  creates  a
                    temporary   file  and  saves  itself  in  it.   On
                    completion, the file  is  deleted.   This  is  the
                    slowest method of swapping.

                    With no options, the current swapping options  are
                    displayed.
          tttteeeesssstttt _e_x_p_r
          [[[[ _e_x_p_r ]]]]
               Evaluate conditional expressions.  TTTTeeeesssstttt  evaluates  the
               expression  _e_x_p_r  and,  if its value is true, returns a
               zero (true) exit status; otherwise, a non-zero  (false)
               exit  status  is returned; tttteeeesssstttt also returns a non-zero
               exit status if there are no arguments.  The  primitives
               are  the  same  as  for  the  [[[[[[[[ _e_x_p_r_e_s_s_i_o_n ]]]]]]]] command,
               except that -_a and -_o are not primitives, but are  used
               to  combine operators (see tttteeeesssstttt ((((1111))))).  -_a is the binary
               aaaannnndddd operator and -_o is the binary oooorrrr operator.

               Notice that all the operators and  flags  are  separate
               arguments  to  tttteeeesssstttt.   Notice also that parentheses are
               meaningful  to  the  shell  and,  therefore,  must   be
               escaped.

          ttttrrrraaaapppp [ -_l ] _a_r_g ] [ _S_i_g_n_a_l_N_u_m_b_e_r ] ...
               The command _a_r_g is to be read  and  executed  when  the
               shell  receives signal(s) _S_i_g_n_a_l_N_u_m_b_e_r.  (Note that _a_r_g
               is scanned once when the trap is set and once when  the
               trap is taken.)  Trap commands are executed in order of
               signal number.  Any attempt to set a trap on  a  signal
               that  was  ignored  on  entry  to  the current shell is
               ineffective.

               If _a_r_g is absent all trap(s) _S_i_g_n_a_l_N_u_m_b_e_r are reset  to
               their  original values.  If _a_r_g is the null string this
               signal is ignored by the shell and by the  commands  it
               invokes.

               A potential point of  confusion  is  that  UUUUNNNNIIIIXXXX  signal
               numbers  are  different  from  MMMMSSSS----DDDDOOOOSSSS  and  OOOOSSSS////2222 signal
               numbers.  MMMMSSSS----DDDDOOOOSSSS  and  OOOOSSSS////2222  signal  numbers  sometimes
               appear to differ between compilers.  If a numeric value
               is used, it is assumed to be a UUUUNNNNIIIIXXXX signal  number  and
               this  is  mapped  to the appropriate MMMMSSSS----DDDDOOOOSSSS/OOOOSSSS////2222 signal



     Page 50                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               number.  If there is no mapping, a warning  message  is
               displayed.   If  the signal number is a signal name, it
               is translated into the appropriate  MMMMSSSS----DDDDOOOOSSSS/OOOOSSSS////2222  signal
               number.   The  list  of valid signal names is displayed
               using the -_l flag.

               If _S_i_g_n_a_l_N_u_m_b_e_r is DDDDEEEEBBBBUUUUGGGG  then  _a_r_g  will  be  executed
               after  each  command.  If _S_i_g_n_a_l_N_u_m_b_e_r is EEEERRRRRRRR, _a_r_g will
               be executed whenever a  command  has  a  non-zero  exit
               code.

               If _S_i_g_n_a_l_N_u_m_b_e_r is 0 or EEEEXXXXIIIITTTT and the trap statement  is
               executed inside the body of a function, the command _a_r_g
               is  executed  after   the   function   completes.    If
               _S_i_g_n_a_l_N_u_m_b_e_r  is  0  or EEEEXXXXIIIITTTT for a trap set outside any
               function, the command _a_r_g is executed on exit from  the
               shell.

               The ttttrrrraaaapppp command with no arguments  prints  a  list  of
               commands associated with each signal number.

          ttttrrrruuuueeee No effect; the command does nothing.  A zero exit  code
               is returned.

          ttttyyyyppppeeeesssseeeetttt [ ----HHHHLLLLRRRRZZZZffffiiiillllpppprrrrttttuuuuxxxx[nnnn] [ nnnnaaaammmmeeee[ ====vvvvaaaalllluuuueeee ] ] ... ]
               When invoked inside a function, a new instance  of  the
               parameter  name  is  created.   The parameter value and
               type are restored when  the  function  completes.   The
               following list of attributes may be specified:

               ----HHHH   This flag provides UUUUNNNNIIIIXXXX to host-name file  mapping
                    on non-UUUUNNNNIIIIXXXX machines (see mmmmssssddddoooossss command).

               ----LLLL   Left justify and remove leading blanks from value.
                    If  nnnn  is  non-zero  it  defines  the width of the
                    field, otherwise it is determined by the width  of
                    the value of first assignment.  When the parameter
                    is assigned to, it is filled  on  the  right  with
                    blanks or truncated, if necessary, to fit into the
                    field.  Leading zeros are removed if the  ----ZZZZ  flag
                    is also set.  The ----RRRR flag is turned off.

               ----RRRR   Right justify and fill with leading blanks.  If  nnnn
                    is  non-zero,  it  defines the width of the field,
                    otherwise it is determined by  the  width  of  the
                    value  of  first  assignment.   The  field is left
                    filled with blanks or truncated from  the  end  if
                    the  parameter  is  reassigned.   The  ----LLLL  flag is
                    turned off.

               ----ZZZZ   Right justify and fill with leading zeros  if  the
                    first  non-blank  character  is a digit and the ----LLLL



     Page 51                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    flag has not been  set.   If  nnnn  is  non-zero,  it
                    defines  the  width  of the field, otherwise it is
                    determined by the width  of  the  value  of  first
                    assignment.

               ----ffff   The names refer  to  function  names  rather  than
                    parameter  names.   No assignments can be made and
                    the only other valid flags are ----tttt, which turns  on
                    execution  tracing  for  this  function and ----xxxx, to
                    allow the function  to  remain  in  effect  across
                    shell  procedures  executed  in  the  same process
                    environment.

               ----iiii   Parameter is an integer.   This  makes  arithmetic
                    faster.   If  nnnn  is non-zero it defines the output
                    arithmetic base, otherwise  the  first  assignment
                    determines the output base.

               ----llll   All upper-case characters converted to lower-case.
                    The upper-case flag, ----uuuu is turned off.

               ----pppp   The output of this command,  if  any,  is  written
                    onto  the two-way pipe.  TTTThhhhiiiissss ooooppppttttiiiioooonnnn hhhhaaaassss nnnnoooo eeeeffffffffeeeecccctttt
                    iiiinnnn tttthhhheeee SSSShhhheeeellllllll.

               ----rrrr   The given names  are  marked  readonly  and  these
                    names cannot be changed by subsequent assignment.

               ----tttt   Tags the named parameters. Tags are user definable
                    and have no special meaning to the shell.

               ----uuuu   All lower-case characters are converted to  upper-
                    case  characters.   The  lower-case  flag,  ----llll  is
                    turned off.

               ----xxxx   The given names are marked for automatic export to
                    the environment of subsequently-executed commands.

               Using + rather than - causes these flags to  be  turned
               off.   If  no  name  arguments  are given but flags are
               specified, a list of names (and optionally the  values)
               of  the  parameters  which  have  these  flags  set  is
               printed.  (Using + rather than - keeps the values to be
               printed.)   If  no names and flags are given, the names
               and attributes of all parameters are printed.

          uuuummmmaaaasssskkkk [ _n_n_n ]
               The  user  file-creation  mask  is  set  to  _n_n_n   (see
               _u_m_a_s_k(2)).  If _n_n_n is omitted, the current value of the
               mask is printed.

          uuuunnnnaaaalllliiiiaaaassss _n_a_m_e ...



     Page 52                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



               The aliases given by the list of _n_a_m_es are removed from
               the alias list.

          uuuunnnnffffuuuunnnnccccttttiiiioooonnnn _n_a_m_e ...
               For each _n_a_m_e, remove the corresponding function.

          uuuunnnnsssseeeetttt [ ----ffff ] _n_a_m_e ...
               The  parameters  given  by  the  list  of   _n_a_m_es   are
               unassigned  (their  values  and attributes are erased).
               The following variables, as well as those with a  read-
               only  attribute  cannot  be  unset: PPPPAAAATTTTHHHH, PPPPSSSS1111, PPPPSSSS2222, and
               IIIIFFFFSSSS.  If the -f flag is set, then the  names  refer  to
               function names and the functions are removed.

               Unsetting LLLLIIIINNNNEEEENNNNOOOO, MMMMAAAAIIIILLLLCCCCHHHHEEEECCCCKKKK,  OOOOPPPPTTTTAAAARRRRGGGG,  OOOOPPPPTTTTIIIINNNNDDDD,  RRRRAAAANNNNDDDDOOOOMMMM,
               SSSSEEEECCCCOOOONNNNDDDDSSSS,  and  ____  removes their special meaning even if
               they are subsequently assigned to.

          vvvveeeerrrr  Display the current version of the shell.

          wwwwaaaaiiiitttt [ jjjjoooobbbb ]
               This command (which is only available under OOOOSSSS////2222) waits
               for  the  specified  _j_o_b  to  terminate  and report its
               status.  This status becomes the return  code  for  the
               wwwwaaaaiiiitttt  command.  If _j_o_b is not given, wwwwaaaaiiiitttt waits for all
               currently active child  processes  to  terminate.   The
               termination   status  returned  is  that  of  the  last
               process.  See JJJJoooobbbbssss for a description of the format of a
               _j_o_b.

          wwwwhhhheeeennnncccceeee [ ----ppppttttvvvv ] [ _n_a_m_e ... ]
          ttttyyyyppppeeee [ ----pppptttt ] [ _n_a_m_e ... ]
               For each _n_a_m_e  specified,  indicate  how  it  would  be
               interpreted  if used as a command name.  Note that ttttyyyyppppeeee
               is a shorthand for wwwwhhhheeeennnncccceeee ----vvvv.   If  the  -_t  option  is
               used, the shell will report the executable type of _n_a_m_e
               (MS Windows, Character-based, MS-DOS, OS/2, MS  Windows
               NT, etc).

               ----pppp   Does a path search for _n_a_m_e even if the name is an
                    alias, a function, or a reserved word.

               ----vvvv   Produces a more verbose report.

        IIIInnnnvvvvooooccccaaaattttiiiioooonnnn
          If the shell  is  invoked  through  _e_x_e_c(2)  and  the  first
          character of argument zero is ---- or the ----0000(zero) switch is in
          the  invocation  line,  commands  are  initially  read  from
          ////eeeettttcccc////pppprrrrooooffffiiiilllleeee  (the  extensions  ....sssshhhh or ....kkkksssshhhh may be used) and
          from $$$$HHHHOOOOMMMMEEEE////pppprrrrooooffffiiiilllleeee (the extensions rrrreeeeaaaadddd ffffrrrroooommmm tttthhhheeee ffffiiiilllleeee  nnnnaaaammmmeeeedddd
          bbbbyyyy  ppppeeeerrrrffffoooorrrrmmmmiiiinnnngggg  ppppaaaarrrraaaammmmeeeetttteeeerrrr  ssssuuuubbbbssssttttiiiittttuuuuttttiiiioooonnnn  oooonnnn tttthhhheeee vvvvaaaalllluuuueeee ooooffff tttthhhheeee
          eeeennnnvvvviiiirrrroooonnnnmmmmeeeennnntttt ppppaaaarrrraaaammmmeeeetttteeeerrrr EEEENNNNVVVV if the file  exists.   Thereafter,



     Page 53                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          commands are read as described below, which is also the case
          when the shell is invoked as ////bbbbiiiinnnn////sssshhhh.  The flags  below  are
          interpreted  by  the  shell  on  invocation  only; Note that
          unless the ----cccc or ----ssss flag is specified, the first argument is
          assumed  to  be  the name of a file containing commands, and
          the remaining arguments are passed as positional  parameters
          to that command file:

          ----cccc string If the ----cccc flag is present commands are  read  from
                    _s_t_r_i_n_g.

          ----ssss        If the ----ssss flag  is  present  or  if  no  arguments
                    remain  commands are read from the standard input.
                    Any remaining  arguments  specify  the  positional
                    parameters.   Shell  output  (except  for  _S_p_e_c_i_a_l
                    _C_o_m_m_a_n_d_s) is written to file descriptor 2.

          ----iiii        If the ----iiii flag is present or if  the  shell  input
                    and  output are attached to a terminal, this shell
                    is  _i_n_t_e_r_a_c_t_i_v_e.   In  this  case,  the  TERMINATE
                    signal  is  ignored  and  the  INTERRUPT signal is
                    caught and ignored.  In all cases, the QUIT signal
                    is ignored by the shell.

          ----rrrr        If  the  ----rrrr  flag  is  present,  the  shell  is  a
                    restricted shell.

          ----0000(zero)  If the ----0000(zero) flag is present, this has the same
                    effect  as  starting  the  shell  with  the  first
                    character of argument zero as a ---- (see above).

          ----DDDD variable=value
                    This option  allows  the  setting  of  environment
                    variables  at  the start of the shell's execution.
                    These variables are set up  after  the  shell  has
                    read  the  current environment.  The option allows
                    the user to change the value of  variable  in  the
                    environment    without   changing   the   parent's
                    environment.  Under UNIX,  this  functionality  is
                    unnecessary.  However, MS-DOS, OS/2 and MS Windows
                    NT do not provide the necessary  functionality  to
                    allow  the  setting  of  variables  just  for  one
                    particular program.

          ----PPPP        This option enables real pipes  under  OOOOSSSS////2222.   See
                    LLLLIIIIMMMMIIIITTTTAAAATTTTIIIIOOOONNNNSSSS.

          ----RRRR        If the ----RRRR flag is present, the shell is  the  _r_o_o_t
                    shell  and cannot be terminated using exit.  Under
                    MMMMSSSS----DDDDOOOOSSSS, the system must be re-booted.  Under OOOOSSSS////2222,
                    the  shell  must be killed by an external program.
                    In addition, the initialisation file is  not  read



     Page 54                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



                    until  just before the first keyboard input.  This
                    allows the location of the file to be  changed  by
                    changing   the  value  of  the  SHELL  environment
                    variable.

          ----XXXX directory
                    If the ----XXXX flag is present, the following _d_i_r_e_c_t_o_r_y
                    defines  the startup directory for the shell.  The
                    shell immediately changes to this directory.

          The remaining flags and arguments are  described  under  the
          sssseeeetttt command above.

        RRRRsssshhhh OOOOnnnnllllyyyy
          _R_s_h is used to set up login names and execution environments
          whose  capabilities  are  more  controlled than those of the
          standard shell.  The actions of _r_s_h are identical  to  those
          of _s_h, except that the following are disallowed:

               Changing directory (see _c_d(1)),
               Setting the value of SSSSHHHHEEEELLLLLLLL, EEEENNNNVVVV, or $$$$PPPPAAAATTTTHHHH,
               Specifying path or command names containing ////,
               Redirecting output (>>>> and >>>>>>>>).

          The restrictions above are enforced after  pppprrrrooooffffiiiilllleeee  and  the
          EEEENNNNVVVV files are interpreted.

          When a command to  be  executed  is  found  to  be  a  shell
          procedure,  _r_s_h  invokes  _s_h  to  execute  it.   Thus, it is
          possible to provide to the end-user  shell  procedures  that
          have  access  to the full power of the standard shell, while
          imposing a limited menu of  commands;  this  scheme  assumes
          that   the   end-user   does  not  have  write  and  execute
          permissions in the same directory.

          The net effect of these rules is  that  the  writer  of  the
          pppprrrrooooffffiiiilllleeee   has   complete   control  over  user  actions,  by
          performing guaranteed setup actions and leaving the user  in
          an appropriate directory (probably _n_o_t the login directory).

          The system  administrator  often  sets  up  a  directory  of
          commands  (i.e.,  ////uuuussssrrrr////rrrrbbbbiiiinnnn)  that  can be safely invoked by
          _r_s_h.  Some systems also provide a restricted editor _r_e_d.

     EEEEXXXXIIIITTTT SSSSTTTTAAAATTTTUUUUSSSS
          Errors detected by the shell, such as syntax  errors,  cause
          the shell to return a non-zero exit status.  If the shell is
          being used non-interactively execution of the shell file  is
          abandoned.   Otherwise, the shell returns the exit status of
          the last command executed (see also the eeeexxxxiiiitttt command above).

     FFFFIIIILLLLEEEESSSS



     Page 55                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          /etc/profile
          $HOME/profile
          $HOME/history.sh.
          $TMP/sh*.tmp
          ??/sh.ini

     CCCCRRRRIIIITTTTIIIICCCCAAAALLLL EEEERRRRRRRROOOORRRRSSSS
          The Shell provide a Critical Error  Handler  (Interrupt  24)
          similar  to the standard MMMMSSSS----DDDDOOOOSSSS handler.  In addition to the
          standard message, the handler  also  displays  the  Extended
          Error Code information in hexadecimal.

     LLLLIIIIMMMMIIIITTTTAAAATTTTIIIIOOOONNNNSSSS
          Under MS-DOS, any TSR  (Terminate  Stay  Resident)  programs
          must be loaded before loading _S_h as the shell will overwrite
          the TSR when it reloads itself after swapping out.

          The shell checks for valid DOS filenames (single dot, not at
          the beginning).  Invalid dots are converted to ~~~~.  A warning
          message is displayed if the shell detects  an  invalid  file
          name.

          Under OOOOSSSS////2222, asynchronous commands are supported to a degree.
          However,  this  is very limited because of the nature of the
          forking commands under OOOOSSSS////2222 which does not  match  the  UUUUNNNNIIIIXXXX
          model.   This  difference  has  also meant that pipes (as in
          MS-DOS) are implemented as files and not  OOOOSSSS////2222  pipes.   For
          more details, see the source code.

          However, real OOOOSSSS////2222 pipes can be used with  care  for  simple
          pipelines  which  do  not create sub-shells or assume that a
          real child shell is  created  because  the  shell  does  not
          create  child,  it  simulates  their  creating  in  the same
          process.  This is because there is no fork under OOOOSSSS////2222.   See
          the sssseeeetttt command on how to enable/disable real pipes.

     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          cd(1), test(1), umask(1),
          exec(2),   pipe(2),    signal(2),    umask(2),    strtol(3),
          profile(4),   environ(5)   in  the  _U_N_I_X  _S_y_s_t_e_m  _P_r_o_g_r_a_m_m_e_r
          _R_e_f_e_r_e_n_c_e _M_a_n_u_a_l.
          COMMAND(1) and SUBST(1) in the _M_S-_D_O_S _R_e_f_e_r_e_n_c_e _G_u_i_d_e.
          CMD(1) in the _O_S/_2 Reference Guide.
          CMD(1) in the _M_S _W_i_n_d_o_w_s _N_T Reference Guide.
          DosStartSession(2) in the  _O_S/_2  _C_o_n_t_r_o_l  _P_r_o_g_r_a_m  _R_e_f_e_r_e_n_c_e
          _M_a_n_u_a_l.

     AAAACCCCKKKKNNNNOOOOWWWWLLLLEEEEDDDDGGGGEEEEMMMMEEEENNNNTTTTSSSS
          This program is based  on  ideas,  code  or  parts  of  code
          developed by:

          David Korn and Steve Bourne (the original ideas)



     Page 56                                         (printed 6/30/94)




     SSSSHHHH((((1111LLLL))))          LLLLOOOOCCCCAAAALLLL ((((MMMMSSSS----DDDDOOOOSSSS ---- OOOOSSSS////2222 VVVVeeeerrrrssssiiiioooonnnn 2222....3333))))          SSSSHHHH((((1111LLLL))))



          Charles Forsyth (the original source  for  the  MINIX  Shell
          program)
          Erik Baalbergen (the code for the test function)
          Paul Falstad (the code for the maths functions)
          Simon J. Gerraty (the code for the new lexical analyser  and
          the VI/EMACS edit functions).

          In addition, a very large number  of  people  (too  many  to
          mention) who have been involved in testing and debugging the
          program.













































     Page 57                                         (printed 6/30/94)
